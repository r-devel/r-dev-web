<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>test tolerance on The R Blog</title>
    <link>https://blog.r-project.org/tags/test-tolerance/</link>
    <description>Recent content in test tolerance on The R Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Apr 2025 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.r-project.org/tags/test-tolerance/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sensitivity to C math library and mingw-w64 v12</title>
      <link>https://blog.r-project.org/2025/04/24/sensitivity-to-c-math-library-and-mingw-w64-v12/</link>
      <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
      
      <guid>https://blog.r-project.org/2025/04/24/sensitivity-to-c-math-library-and-mingw-w64-v12/</guid>
      <description>C math library functions, such as exp or sin, are heavily used by R and packages. The C standard doesn’t require these functions to be “precise”. Instead, there is room for performance optimizations causing a reasonable amount of inaccuracy. The results differ between platforms and may change even on a single platform. This happened with mingw-w64 v12, the SDK/runtime used by GCC and LLVM on Windows, which reduced accuracy of many math functions (for performance and maintenance reasons).</description>
    </item>
    
  </channel>
</rss>