<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bytes on The R Blog</title>
    <link>https://blog.r-project.org/tags/bytes/</link>
    <description>Recent content in bytes on The R Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Oct 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.r-project.org/tags/bytes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Improvements in handling bytes encoding</title>
      <link>https://blog.r-project.org/2022/10/10/improvements-in-handling-bytes-encoding/</link>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.r-project.org/2022/10/10/improvements-in-handling-bytes-encoding/</guid>
      <description>In R, a string can be declared to be in bytes encoding. According to ?Encoding, it must be a non-ASCII string which should be manipulated as bytes and never converted to a character encoding (e.g. Latin 1, UTF-8). This text summarizes recent improvements in how R handles bytes encoded strings and provides some of thoughts about what they should and shouldn’t be used for today.
Character vector, string and encoding Particularly for readers not familiar with R, it may be useful to highlight how strings are supported in the language.</description>
    </item>
    
  </channel>
</rss>