<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>grid, units on The R Blog</title>
    <link>https://blog.r-project.org/tags/grid-units/</link>
    <description>Recent content in grid, units on The R Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.r-project.org/tags/grid-units/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Changes to Symbol Fonts for Cairo Graphics Devices</title>
      <link>https://blog.r-project.org/2020/04/17/changes-to-symbol-fonts-for-cairo-graphics-devices/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.r-project.org/2020/04/17/changes-to-symbol-fonts-for-cairo-graphics-devices/</guid>
      <description>The symbol font When drawing text in R graphics, we can specify the font “family” to use, e.g., a generic family like &#34;sans&#34; or a specific family like &#34;Helvetica&#34;, and we can specify the font “face” to use, e.g., plain, bold, or italic. R graphics provides four standard font faces, plain, bold, italic, bold-italic, and one special font face that R calls “symbol”. The following code and output demonstrate the different font faces.</description>
    </item>
    
    <item>
      <title>Changes to &#39;grid&#39; units</title>
      <link>https://blog.r-project.org/2020/04/13/changes-to-grid-units/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.r-project.org/2020/04/13/changes-to-grid-units/</guid>
      <description>One of the main downsides to the ‘grid’ graphics package is that it is slow. And that makes some important packages that depend on ‘grid’, like ‘ggplot2’, slow. For example, the scatterplots shown below are roughly equivalent, but one is drawn using ‘graphics’ and the other using ‘ggplot2’.
The ‘ggplot2’ version takes more than 4 times as long to draw.
(The benchmarks in this post were produced using the ‘bench’ package within a Docker container based on rocker/r-devel, but with R-devel (r77995) built with --enable-memory-profiling and a bunch of R packages installed; the Docker images, pmur002/grid-new-units-r-3.</description>
    </item>
    
  </channel>
</rss>