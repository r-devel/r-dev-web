diff -Nru orig/affxparser/src/Makevars.win patched/affxparser/src/Makevars.win
--- orig/affxparser/src/Makevars.win	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/Makevars.win	2024-03-12 11:46:06.878648200 +0100
@@ -31,7 +31,7 @@
  -I$(FUSION_SDK)/util\
  -I$(FUSION_SDK)\
  -D_USE_MEM_MAPPING_\
- -D_MSC_VER
+ -DFUSION_MSC_VER
 
 PKG_CPP_SOURCES = \
 	$(FUSION_SDK)/calvin_files/data/src/CDFData.cpp\
diff -Nru orig/affxparser/src/R_affx_constants.h patched/affxparser/src/R_affx_constants.h
--- orig/affxparser/src/R_affx_constants.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/R_affx_constants.h	2024-03-12 11:46:07.274265000 +0100
@@ -11,7 +11,7 @@
   #define IS_BIG_ENDIAN 1
 #endif
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define _strtoui64 strtoull	/* for TsvFile.cpp */
 #include <w32api.h>
 #define WINVER WindowsXP	/* for Util.cpp, via TsvFile.cpp */
diff -Nru orig/affxparser/src/_mingw.h patched/affxparser/src/_mingw.h
--- orig/affxparser/src/_mingw.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/_mingw.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,22 +0,0 @@
-/*****************************************************************
- This header file is used when compiling with MinGW on Windows.
- It is agile to the gcc toolchain currently used; it uses
- different setups for:
-
-  - gcc (>= 4.9.3): introduced in R (>= 3.3.0)
-  - gcc (>= 4.6.3): R (< 3.3.0) and some R (>= 3.3.0) installs
-
- Henrik Bengtsson, 2016-04-05
-*****************************************************************/
-#define GCC_VERSION (__GNUC__ * 10000 \
-                              + __GNUC_MINOR__ * 100 \
-                              + __GNUC_PATCHLEVEL__)
-#if GCC_VERSION >= 120200
-#include "_mingw_gcc1202.h"
-#elif GCC_VERSION >= 100200
-#include "_mingw_gcc1002.h"
-#elif GCC_VERSION >= 40903
-#include "_mingw_gcc493.h"
-#elif GCC_VERSION >= 40603
-#include "_mingw_gcc463.h"
-#endif
diff -Nru orig/affxparser/src/_mingw_gcc1002.h patched/affxparser/src/_mingw_gcc1002.h
--- orig/affxparser/src/_mingw_gcc1002.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/_mingw_gcc1002.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,621 +0,0 @@
-/* This is a copy of _mingw.h from MinGW headers (the toolchain installation,
-   should match the toolchain used. Modified/hacked to provide __uuidof()
-   operator - see HACK below.
-
-   There should be a cleaner solution, but this is what has been
-   done before.
-*/
-/**
- * This file has no copyright assigned and is placed in the Public Domain.
- * This file is part of the mingw-w64 runtime package.
- * No warranty is given; refer to the file DISCLAIMER.PD within this package.
- */
-
-#ifndef _INC__MINGW_H
-#define _INC__MINGW_H
-
-#include "_mingw_mac.h"
-#include "_mingw_secapi.h"
-
-/* Include _cygwin.h if we're building a Cygwin application. */
-#ifdef __CYGWIN__
-#include "_cygwin.h"
-#endif
-
-/* Target specific macro replacement for type "long".  In the Windows API,
-   the type long is always 32 bit, even if the target is 64 bit (LLP64).
-   On 64 bit Cygwin, the type long is 64 bit (LP64).  So, to get the right
-   sized definitions and declarations, all usage of type long in the Windows
-   headers have to be replaced by the below defined macro __LONG32. */
-#ifndef __LP64__	/* 32 bit target, 64 bit Mingw target */
-#define __LONG32 long
-#else			/* 64 bit Cygwin target */
-#define __LONG32 int
-#endif
-
-/* C/C++ specific language defines.  */
-#ifdef _WIN64
-#ifdef __stdcall
-#undef __stdcall
-#endif
-#define __stdcall
-#endif
-
-#ifndef __GNUC__
-# ifndef __MINGW_IMPORT
-#  define __MINGW_IMPORT  __declspec(dllimport)
-# endif
-# ifndef _CRTIMP
-#  define _CRTIMP  __declspec(dllimport)
-# endif
-# define __DECLSPEC_SUPPORTED
-# define __attribute__(x) /* nothing */
-#else /* __GNUC__ */
-# ifdef __declspec
-#  ifndef __MINGW_IMPORT
-/* Note the extern. This is needed to work around GCC's
-limitations in handling dllimport attribute.  */
-#   define __MINGW_IMPORT  extern __attribute__ ((__dllimport__))
-#  endif
-#  ifndef _CRTIMP
-#    undef __USE_CRTIMP
-#    if !defined (_CRTBLD) && !defined (_SYSCRT)
-#      define __USE_CRTIMP 1
-#    endif
-#    ifdef __USE_CRTIMP
-#      define _CRTIMP  __attribute__ ((__dllimport__))
-#    else
-#      define _CRTIMP
-#    endif
-#  endif
-#  define __DECLSPEC_SUPPORTED
-# else /* __declspec */
-#  undef __DECLSPEC_SUPPORTED
-#  undef __MINGW_IMPORT
-#  ifndef _CRTIMP
-#   define _CRTIMP
-#  endif
-# endif /* __declspec */
-#endif /* __GNUC__ */
-  
-/* HACK: to get __uuidof() */
-
-#ifdef _MSC_VER
-#define USE___UUIDOF	0	
-#else
-#define USE___UUIDOF	0	
-#endif
-
-#if !defined(_MSC_VER) && !defined(_inline)
-#define _inline __inline
-#endif
-
-#ifdef __cplusplus
-# define __CRT_INLINE inline
-#elif defined(_MSC_VER)
-# define __CRT_INLINE __inline
-#else
-# if ((__MINGW_GNUC_PREREQ(4, 3) || defined(__clang__)) && __STDC_VERSION__ >= 199901L)
-#  define __CRT_INLINE extern inline __attribute__((__gnu_inline__))
-# else
-#  define __CRT_INLINE extern __inline__
-# endif
-#endif
-
-#if !defined(__MINGW_INTRIN_INLINE) && defined(__GNUC__)
-#define __MINGW_INTRIN_INLINE extern __inline__ __attribute__((__always_inline__,__gnu_inline__))
-#endif
-
-#ifndef __CYGWIN__
-#ifdef __NO_INLINE__
-#undef __CRT__NO_INLINE
-#define __CRT__NO_INLINE 1
-#endif
-#endif
-
-#ifdef __cplusplus
-# define __UNUSED_PARAM(x)
-#else
-# ifdef __GNUC__
-#  define __UNUSED_PARAM(x) x __attribute__ ((__unused__))
-# else
-#  define __UNUSED_PARAM(x) x
-# endif
-#endif
-
-#ifndef __GNUC__
-# ifdef _MSC_VER
-#  define __restrict__  __restrict
-# else
-#  define __restrict__	/* nothing */
-# endif
-#endif /* !__GNUC__ */
-
-#if __MINGW_GNUC_PREREQ (3,1) && !defined __GNUG__
-# define __restrict_arr __restrict
-#elif defined(_MSC_VER)
-# define __restrict_arr __restrict
-#else
-# ifdef __GNUC__
-#  define __restrict_arr        /* Not supported in old GCC.  */
-# else
-#  if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L
-#   define __restrict_arr       restrict
-#  else
-#   define __restrict_arr       /* Not supported.  */
-#  endif
-# endif
-#endif
-
-#ifdef __GNUC__
-#define __MINGW_ATTRIB_NORETURN __attribute__ ((__noreturn__))
-#define __MINGW_ATTRIB_CONST __attribute__ ((__const__))
-#elif __MINGW_MSC_PREREQ(12, 0)
-#define __MINGW_ATTRIB_NORETURN __declspec(noreturn)
-#define __MINGW_ATTRIB_CONST
-#else
-#define __MINGW_ATTRIB_NORETURN
-#define __MINGW_ATTRIB_CONST
-#endif
-
-#if __MINGW_GNUC_PREREQ (3, 0)
-#define __MINGW_ATTRIB_MALLOC __attribute__ ((__malloc__))
-#define __MINGW_ATTRIB_PURE __attribute__ ((__pure__))
-#elif __MINGW_MSC_PREREQ(14, 0)
-#define __MINGW_ATTRIB_MALLOC __declspec(noalias) __declspec(restrict)
-#define __MINGW_ATTRIB_PURE
-#else
-#define __MINGW_ATTRIB_MALLOC
-#define __MINGW_ATTRIB_PURE
-#endif
-
-/* Attribute `nonnull' was valid as of gcc 3.3.  We don't use GCC's
-   variadiac macro facility, because variadic macros cause syntax
-   errors with  --traditional-cpp.  */
-#if  __MINGW_GNUC_PREREQ (3, 3)
-#define __MINGW_ATTRIB_NONNULL(arg) __attribute__ ((__nonnull__ (arg)))
-#else
-#define __MINGW_ATTRIB_NONNULL(arg)
-#endif /* GNUC >= 3.3 */
-
-#ifdef __GNUC__
-#define __MINGW_ATTRIB_UNUSED __attribute__ ((__unused__))
-#else
-#define __MINGW_ATTRIB_UNUSED
-#endif /* ATTRIBUTE_UNUSED */
-
-#if  __MINGW_GNUC_PREREQ (3, 1)
-#define __MINGW_ATTRIB_USED __attribute__ ((__used__))
-#define __MINGW_ATTRIB_DEPRECATED __attribute__ ((__deprecated__))
-#if __MINGW_GNUC_PREREQ (4, 5) || defined (__clang__)
-#define __MINGW_ATTRIB_DEPRECATED_MSG(x) __attribute__ ((__deprecated__(x)))
-#endif
-#elif __MINGW_MSC_PREREQ(12, 0)
-#define __MINGW_ATTRIB_USED
-#define __MINGW_ATTRIB_DEPRECATED __declspec(deprecated)
-#else
-#define __MINGW_ATTRIB_USED __MINGW_ATTRIB_UNUSED
-#define __MINGW_ATTRIB_DEPRECATED
-#endif /* GNUC >= 3.1 */
-
-#ifndef __MINGW_ATTRIB_DEPRECATED_MSG
-#define __MINGW_ATTRIB_DEPRECATED_MSG(x) __MINGW_ATTRIB_DEPRECATED
-#endif
-
-#if  __MINGW_GNUC_PREREQ (3, 3)
-#define __MINGW_NOTHROW __attribute__ ((__nothrow__))
-#elif __MINGW_MSC_PREREQ(12, 0) && defined (__cplusplus)
-#define __MINGW_NOTHROW __declspec(nothrow)
-#else
-#define __MINGW_NOTHROW
-#endif
-
-#if __MINGW_GNUC_PREREQ (4, 4)
-#define __MINGW_ATTRIB_NO_OPTIMIZE __attribute__((__optimize__ ("0")))
-#else
-#define __MINGW_ATTRIB_NO_OPTIMIZE
-#endif
-
-#if __MINGW_GNUC_PREREQ (4, 4)
-#define __MINGW_PRAGMA_PARAM(x) _Pragma (#x)
-#elif __MINGW_MSC_PREREQ (13, 1)
-#define __MINGW_PRAGMA_PARAM(x) __pragma (x)
-#else
-#define __MINGW_PRAGMA_PARAM(x)
-#endif
-
-#define __MINGW_BROKEN_INTERFACE(x) \
-  __MINGW_PRAGMA_PARAM(message ("Interface " _CRT_STRINGIZE(x) \
-  " has unverified layout."))
-
-#ifndef __MSVCRT_VERSION__
-/*  High byte is the major version, low byte is the minor. */
-# ifndef _UCRT
-#  define __MSVCRT_VERSION__ 0xE00
-# else
-#  define __MSVCRT_VERSION__ 0xE00
-# endif
-#endif
-
-
-#ifndef _WIN32_WINNT
-#define _WIN32_WINNT 0x502
-#endif
-
-#ifndef _INT128_DEFINED
-#define _INT128_DEFINED
-#ifdef __GNUC__
-#define __int8 char
-#define __int16 short
-#define __int32 int
-#define __int64 long long
-#ifdef _WIN64
-#if (__clang_major__ > 3 || (__clang_major__ == 3 && __clang_minor__ >= 1)) && \
-    !defined(__SIZEOF_INT128__) /* clang >= 3.1 has __int128 but no size macro */
-#define __SIZEOF_INT128__ 16
-#endif
-#ifndef __SIZEOF_INT128__
-typedef int __int128 __attribute__ ((__mode__ (TI)));
-#endif
-#endif
-#endif /* __GNUC__ */
-#endif /* _INT128_DEFINED */
-
-#ifdef __GNUC__
-#define __ptr32
-#define __ptr64
-#ifndef __unaligned
-#define __unaligned
-#endif
-#ifndef __w64
-#define __w64
-#endif
-#ifdef __cplusplus
-#define __forceinline inline __attribute__((__always_inline__))
-#else
-#define __forceinline extern __inline__ __attribute__((__always_inline__,__gnu_inline__))
-#endif /* __cplusplus */
-#endif /* __GNUC__ */
-
-#if !defined(_WIN32) && !defined(__CYGWIN__)
-#error Only Win32 target is supported!
-#endif
-
-#ifndef __nothrow
-#ifdef __cplusplus
-#define __nothrow __MINGW_NOTHROW
-#else
-#define __nothrow
-#endif
-#endif /* __nothrow */
-
-#include <vadefs.h>	/* other headers depend on this include */
-
-#ifndef _CRT_STRINGIZE
-#define __CRT_STRINGIZE(_Value) #_Value
-#define _CRT_STRINGIZE(_Value) __CRT_STRINGIZE(_Value)
-#endif /* _CRT_STRINGIZE */
-
-#ifndef _CRT_WIDE
-#define __CRT_WIDE(_String) L ## _String
-#define _CRT_WIDE(_String) __CRT_WIDE(_String)
-#endif /* _CRT_WIDE */
-
-#ifndef _W64
-#define _W64
-#endif
-
-#ifndef _CRTIMP_NOIA64
-#ifdef __ia64__
-#define _CRTIMP_NOIA64
-#else
-#define _CRTIMP_NOIA64 _CRTIMP
-#endif
-#endif /* _CRTIMP_NOIA64 */
-
-#ifndef _CRTIMP2
-#define _CRTIMP2 _CRTIMP
-#endif
-
-#ifndef _CRTIMP_ALTERNATIVE
-#define _CRTIMP_ALTERNATIVE _CRTIMP
-#define _CRT_ALTERNATIVE_IMPORTED
-#endif /* _CRTIMP_ALTERNATIVE */
-
-#ifndef _MRTIMP2
-#define _MRTIMP2  _CRTIMP
-#endif
-
-/* We have to define _DLL for gcc based mingw version. This define is set
-   by VC, when DLL-based runtime is used. So, gcc based runtime just have
-   DLL-base runtime, therefore this define has to be set.
-   As our headers are possibly used by windows compiler having a static
-   C-runtime, we make this definition gnu compiler specific here.  */
-#if !defined (_DLL) && defined (__GNUC__)
-#define _DLL
-#endif
-
-#ifndef _MT
-#define _MT
-#endif
-
-#ifndef _MCRTIMP
-#define _MCRTIMP _CRTIMP
-#endif
-
-#ifndef _CRTIMP_PURE
-#define _CRTIMP_PURE _CRTIMP
-#endif
-
-#ifndef _PGLOBAL
-#define _PGLOBAL
-#endif
-
-#ifndef _AGLOBAL
-#define _AGLOBAL
-#endif
-
-#define _SECURECRT_FILL_BUFFER_PATTERN 0xFD
-#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated)
-
-#ifndef _CRT_INSECURE_DEPRECATE_MEMORY
-#define _CRT_INSECURE_DEPRECATE_MEMORY(_Replacement)
-#endif
-
-#ifndef _CRT_INSECURE_DEPRECATE_GLOBALS
-#define _CRT_INSECURE_DEPRECATE_GLOBALS(_Replacement)
-#endif
-
-#ifndef _CRT_MANAGED_HEAP_DEPRECATE
-#define _CRT_MANAGED_HEAP_DEPRECATE
-#endif
-
-#ifndef _CRT_OBSOLETE
-#define _CRT_OBSOLETE(_NewItem)
-#endif
-
-#ifndef __WIDL__
-
-#if defined (_WIN32) && !defined (_WIN64) && !defined (__MINGW_USE_VC2005_COMPAT)
-#ifndef _USE_32BIT_TIME_T
-#define _USE_32BIT_TIME_T
-#endif
-#endif
-
-#ifndef _CONST_RETURN
-#define _CONST_RETURN
-#endif
-
-#ifndef UNALIGNED
-#if defined(_M_IA64) || defined(_M_AMD64)
-#define UNALIGNED __unaligned
-#else
-#define UNALIGNED
-#endif
-#endif /* UNALIGNED */
-
-#ifndef _CRT_ALIGN
-#ifdef  _MSC_VER
-#define _CRT_ALIGN(x) __declspec(align(x))
-#else /* __GNUC__ */
-#define _CRT_ALIGN(x) __attribute__ ((__aligned__ (x)))
-#endif
-#endif /* _CRT_ALIGN */
-
-#endif /* __WIDL__ */
-
-#ifndef __CRTDECL
-#define __CRTDECL __cdecl
-#endif
-
-#define _ARGMAX 100
-
-#ifndef _TRUNCATE
-#define _TRUNCATE ((size_t)-1)
-#endif
-
-#ifndef _CRT_UNUSED
-#define _CRT_UNUSED(x) (void)x
-#endif
-
-/* MSVC defines _NATIVE_NULLPTR_SUPPORTED when nullptr is supported. We emulate it here for GCC. */
-#if __MINGW_GNUC_PREREQ(4, 6)
-#if defined(__GNUC__) && (defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L)
-#define _NATIVE_NULLPTR_SUPPORTED
-#endif
-#endif
-
-/* We are activating __USE_MINGW_ANSI_STDIO for various define indicators.
- * printf ll modifier (unsupported by msvcrt.dll) is required by C99 and C++11 standards. */
-#if (defined (_POSIX) || defined (_POSIX_SOURCE) || defined (_POSIX_C_SOURCE) \
-     || defined (_ISOC99_SOURCE) \
-     || (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L && __MSVCRT_VERSION__ < 0xE00) \
-     || (defined (__cplusplus) && __cplusplus >= 201103L && __MSVCRT_VERSION__ < 0xE00) \
-     || defined (_XOPEN_SOURCE) || defined (_XOPEN_SOURCE_EXTENDED) \
-     || defined (_GNU_SOURCE) \
-     || defined (_SVID_SOURCE)) \
-    && !defined(__USE_MINGW_ANSI_STDIO)
-/* Enable __USE_MINGW_ANSI_STDIO if user did _not_ specify it explicitly... */
-#  define __USE_MINGW_ANSI_STDIO			1
-#endif
-
-/* We are defining __USE_MINGW_ANSI_STDIO as 0 or 1 */
-#if !defined(__USE_MINGW_ANSI_STDIO)
-#define __USE_MINGW_ANSI_STDIO 0      /* was not defined so it should be 0 */
-#elif (__USE_MINGW_ANSI_STDIO + 0) != 0 || (1 - __USE_MINGW_ANSI_STDIO - 1) == 2
-#define __USE_MINGW_ANSI_STDIO 1      /* was defined as nonzero or empty so it should be 1 */
-#else
-#define __USE_MINGW_ANSI_STDIO 0      /* was defined as (int)zero and non-empty so it should be 0 */
-#endif
-
-/* _dowildcard is an int that controls the globbing of the command line.
- * The MinGW32 (mingw.org) runtime calls it _CRT_glob, so we are adding
- * a compatibility definition here:  you can use either of _CRT_glob or
- * _dowildcard .
- * If _dowildcard is non-zero, the command line will be globbed:  *.*
- * will be expanded to be all files in the startup directory.
- * In the mingw-w64 library a _dowildcard variable is defined as being
- * 0, therefore command line globbing is DISABLED by default. To turn it
- * on and to leave wildcard command line processing MS's globbing code,
- * include a line in one of your source modules defining _dowildcard and
- * setting it to -1, like so:
- * int _dowildcard = -1;
- */
-#undef  _CRT_glob
-#define _CRT_glob _dowildcard
-
-
-#if defined(_MSC_VER) && !defined(_MSC_EXTENSIONS)
-#define NONAMELESSUNION		1
-#endif
-#if defined(NONAMELESSSTRUCT) && \
-   !defined(NONAMELESSUNION)
-#define NONAMELESSUNION		1
-#endif
-#if defined(NONAMELESSUNION)  && \
-   !defined(NONAMELESSSTRUCT)
-#define NONAMELESSSTRUCT	1
-#endif
-
-#ifndef __ANONYMOUS_DEFINED
-#define __ANONYMOUS_DEFINED
-#define _ANONYMOUS_UNION  __MINGW_EXTENSION
-#define _ANONYMOUS_STRUCT __MINGW_EXTENSION
-#ifndef NONAMELESSUNION
-#define _UNION_NAME(x)
-#define _STRUCT_NAME(x)
-#else /* NONAMELESSUNION */
-#define _UNION_NAME(x)  x
-#define _STRUCT_NAME(x) x
-#endif
-#endif	/* __ANONYMOUS_DEFINED */
-
-#ifndef DUMMYUNIONNAME
-# ifdef NONAMELESSUNION
-#  define DUMMYUNIONNAME  u
-#  define DUMMYUNIONNAME1 u1	/* Wine uses this variant */
-#  define DUMMYUNIONNAME2 u2
-#  define DUMMYUNIONNAME3 u3
-#  define DUMMYUNIONNAME4 u4
-#  define DUMMYUNIONNAME5 u5
-#  define DUMMYUNIONNAME6 u6
-#  define DUMMYUNIONNAME7 u7
-#  define DUMMYUNIONNAME8 u8
-#  define DUMMYUNIONNAME9 u9
-# else /* NONAMELESSUNION */
-#  define DUMMYUNIONNAME
-#  define DUMMYUNIONNAME1	/* Wine uses this variant */
-#  define DUMMYUNIONNAME2
-#  define DUMMYUNIONNAME3
-#  define DUMMYUNIONNAME4
-#  define DUMMYUNIONNAME5
-#  define DUMMYUNIONNAME6
-#  define DUMMYUNIONNAME7
-#  define DUMMYUNIONNAME8
-#  define DUMMYUNIONNAME9
-# endif
-#endif	/* DUMMYUNIONNAME */
-
-#ifndef DUMMYSTRUCTNAME
-# ifdef NONAMELESSUNION
-#  define DUMMYSTRUCTNAME  s
-#  define DUMMYSTRUCTNAME1 s1	/* Wine uses this variant */
-#  define DUMMYSTRUCTNAME2 s2
-#  define DUMMYSTRUCTNAME3 s3
-#  define DUMMYSTRUCTNAME4 s4
-#  define DUMMYSTRUCTNAME5 s5
-# else
-#  define DUMMYSTRUCTNAME
-#  define DUMMYSTRUCTNAME1	/* Wine uses this variant */
-#  define DUMMYSTRUCTNAME2
-#  define DUMMYSTRUCTNAME3
-#  define DUMMYSTRUCTNAME4
-#  define DUMMYSTRUCTNAME5
-# endif
-#endif /* DUMMYSTRUCTNAME */
-
-
-/* Macros for __uuidof template-based emulation */
-#if defined(__cplusplus) && (USE___UUIDOF == 0)
-
-#if __cpp_constexpr >= 200704l && __cpp_inline_variables >= 201606L
-#define __CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)    \
-    extern "C++" {                                               \
-    template<> struct __mingw_uuidof_s<type> {                   \
-        static constexpr IID __uuid_inst = {                     \
-            l,w1,w2, {b1,b2,b3,b4,b5,b6,b7,b8}                   \
-        };                                                       \
-    };                                                           \
-    template<> constexpr const GUID &__mingw_uuidof<type>() {    \
-        return __mingw_uuidof_s<type>::__uuid_inst;              \
-    }                                                            \
-    template<> constexpr const GUID &__mingw_uuidof<type*>() {   \
-        return  __mingw_uuidof_s<type>::__uuid_inst;             \
-    }                                                            \
-    }
-#else
-#define __CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)           \
-    extern "C++" {                                                      \
-    template<> inline const GUID &__mingw_uuidof<type>() {              \
-        static const IID __uuid_inst = {l,w1,w2, {b1,b2,b3,b4,b5,b6,b7,b8}}; \
-        return __uuid_inst;                                             \
-    }                                                                   \
-    template<> inline const GUID &__mingw_uuidof<type*>() {             \
-        return __mingw_uuidof<type>();                                  \
-    }                                                                   \
-    }
-#endif
-
-#define __uuidof(type) __mingw_uuidof<__typeof(type)>()
-
-#else
-
-#define __CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)
-
-#endif
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-
-#ifdef __MINGW_INTRIN_INLINE
-#ifdef __has_builtin
-#define __MINGW_DEBUGBREAK_IMPL !__has_builtin(__debugbreak)
-#else
-#define __MINGW_DEBUGBREAK_IMPL 1
-#endif
-#if __MINGW_DEBUGBREAK_IMPL == 1
-void __cdecl __debugbreak(void);
-__MINGW_INTRIN_INLINE void __cdecl __debugbreak(void)
-{
-  __asm__ __volatile__("int {$}3":);
-}
-#endif
-#endif
-
-/* mingw-w64 specific functions: */
-const char *__mingw_get_crt_info (void);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif /* _INC__MINGW_H */
-
-#ifndef MINGW_SDK_INIT
-#define MINGW_SDK_INIT
-
-/* for backward compatibility */
-#ifndef MINGW_HAS_SECURE_API
-#define MINGW_HAS_SECURE_API 1
-#endif
-
-#define __STDC_SECURE_LIB__ 200411L
-#define __GOT_SECURE_LIB__ __STDC_SECURE_LIB__
-
-#ifndef __WIDL__
-#include "sdks/_mingw_ddk.h"
-#endif
-
-#endif /* MINGW_SDK_INIT */
diff -Nru orig/affxparser/src/_mingw_gcc1202.h patched/affxparser/src/_mingw_gcc1202.h
--- orig/affxparser/src/_mingw_gcc1202.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/_mingw_gcc1202.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,634 +0,0 @@
-/* This is a copy of _mingw.h from MinGW headers (the toolchain installation,
-   should match the toolchain used. Modified/hacked to provide __uuidof()
-   operator - see HACK below.
-
-   There should be a cleaner solution, but this is what has been
-   done before.
-*/
-
-/**
- * This file has no copyright assigned and is placed in the Public Domain.
- * This file is part of the mingw-w64 runtime package.
- * No warranty is given; refer to the file DISCLAIMER.PD within this package.
- */
-
-#ifndef _INC__MINGW_H
-#define _INC__MINGW_H
-
-#include "_mingw_mac.h"
-#include "_mingw_secapi.h"
-
-/* Include _cygwin.h if we're building a Cygwin application. */
-#ifdef __CYGWIN__
-#include "_cygwin.h"
-#endif
-
-/* Target specific macro replacement for type "long".  In the Windows API,
-   the type long is always 32 bit, even if the target is 64 bit (LLP64).
-   On 64 bit Cygwin, the type long is 64 bit (LP64).  So, to get the right
-   sized definitions and declarations, all usage of type long in the Windows
-   headers have to be replaced by the below defined macro __LONG32. */
-#ifndef __LP64__	/* 32 bit target, 64 bit Mingw target */
-#define __LONG32 long
-#else			/* 64 bit Cygwin target */
-#define __LONG32 int
-#endif
-
-/* C/C++ specific language defines.  */
-#ifdef _WIN64
-#ifdef __stdcall
-#undef __stdcall
-#endif
-#define __stdcall
-#endif
-
-#ifndef __GNUC__
-# ifndef __MINGW_IMPORT
-#  define __MINGW_IMPORT  __declspec(dllimport)
-# endif
-# ifndef _CRTIMP
-#  define _CRTIMP  __declspec(dllimport)
-# endif
-# define __DECLSPEC_SUPPORTED
-# define __attribute__(x) /* nothing */
-#else /* __GNUC__ */
-# ifdef __declspec
-#  ifndef __MINGW_IMPORT
-/* Note the extern. This is needed to work around GCC's
-limitations in handling dllimport attribute.  */
-#   define __MINGW_IMPORT  extern __attribute__ ((__dllimport__))
-#  endif
-#  ifndef _CRTIMP
-#    undef __USE_CRTIMP
-#    if !defined (_CRTBLD) && !defined (_SYSCRT)
-#      define __USE_CRTIMP 1
-#    endif
-#    ifdef __USE_CRTIMP
-#      define _CRTIMP  __attribute__ ((__dllimport__))
-#    else
-#      define _CRTIMP
-#    endif
-#  endif
-#  define __DECLSPEC_SUPPORTED
-# else /* __declspec */
-#  undef __DECLSPEC_SUPPORTED
-#  undef __MINGW_IMPORT
-#  ifndef _CRTIMP
-#   define _CRTIMP
-#  endif
-# endif /* __declspec */
-#endif /* __GNUC__ */
-
-#ifdef _MSC_VER
-#define USE___UUIDOF	0
-#else
-#define USE___UUIDOF	0
-#endif
-
-#if !defined(_MSC_VER) && !defined(_inline)
-#define _inline __inline
-#endif
-
-#ifdef __cplusplus
-# define __CRT_INLINE inline
-#elif defined(_MSC_VER)
-# define __CRT_INLINE __inline
-#else
-# if ((__MINGW_GNUC_PREREQ(4, 3) || defined(__clang__)) && __STDC_VERSION__ >= 199901L)
-#  define __CRT_INLINE extern inline __attribute__((__gnu_inline__))
-# else
-#  define __CRT_INLINE extern __inline__
-# endif
-#endif
-
-#if !defined(__MINGW_INTRIN_INLINE) && defined(__GNUC__)
-#define __MINGW_INTRIN_INLINE extern __inline__ __attribute__((__always_inline__,__gnu_inline__))
-#endif
-
-#ifndef __CYGWIN__
-#ifdef __NO_INLINE__
-#undef __CRT__NO_INLINE
-#define __CRT__NO_INLINE 1
-#endif
-#endif
-
-#ifdef __cplusplus
-# define __UNUSED_PARAM(x)
-#else
-# ifdef __GNUC__
-#  define __UNUSED_PARAM(x) x __attribute__ ((__unused__))
-# else
-#  define __UNUSED_PARAM(x) x
-# endif
-#endif
-
-#ifndef __GNUC__
-# ifdef _MSC_VER
-#  define __restrict__  __restrict
-# else
-#  define __restrict__	/* nothing */
-# endif
-#endif /* !__GNUC__ */
-
-#if __MINGW_GNUC_PREREQ (3,1) && !defined __GNUG__
-# define __restrict_arr __restrict
-#elif defined(_MSC_VER)
-# define __restrict_arr __restrict
-#else
-# ifdef __GNUC__
-#  define __restrict_arr        /* Not supported in old GCC.  */
-# else
-#  if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L
-#   define __restrict_arr       restrict
-#  else
-#   define __restrict_arr       /* Not supported.  */
-#  endif
-# endif
-#endif
-
-#ifdef __GNUC__
-#define __MINGW_ATTRIB_NORETURN __attribute__ ((__noreturn__))
-#define __MINGW_ATTRIB_CONST __attribute__ ((__const__))
-#elif __MINGW_MSC_PREREQ(12, 0)
-#define __MINGW_ATTRIB_NORETURN __declspec(noreturn)
-#define __MINGW_ATTRIB_CONST
-#else
-#define __MINGW_ATTRIB_NORETURN
-#define __MINGW_ATTRIB_CONST
-#endif
-
-#if __MINGW_GNUC_PREREQ (3, 0)
-#define __MINGW_ATTRIB_MALLOC __attribute__ ((__malloc__))
-#define __MINGW_ATTRIB_PURE __attribute__ ((__pure__))
-#elif __MINGW_MSC_PREREQ(14, 0)
-#define __MINGW_ATTRIB_MALLOC __declspec(noalias) __declspec(restrict)
-#define __MINGW_ATTRIB_PURE
-#else
-#define __MINGW_ATTRIB_MALLOC
-#define __MINGW_ATTRIB_PURE
-#endif
-
-/* Attribute `nonnull' was valid as of gcc 3.3.  We don't use GCC's
-   variadiac macro facility, because variadic macros cause syntax
-   errors with  --traditional-cpp.  */
-#if  __MINGW_GNUC_PREREQ (3, 3)
-#define __MINGW_ATTRIB_NONNULL(arg) __attribute__ ((__nonnull__ (arg)))
-#else
-#define __MINGW_ATTRIB_NONNULL(arg)
-#endif /* GNUC >= 3.3 */
-
-#ifdef __GNUC__
-#define __MINGW_ATTRIB_UNUSED __attribute__ ((__unused__))
-#else
-#define __MINGW_ATTRIB_UNUSED
-#endif /* ATTRIBUTE_UNUSED */
-
-#if  __MINGW_GNUC_PREREQ (3, 1)
-#define __MINGW_ATTRIB_USED __attribute__ ((__used__))
-#define __MINGW_ATTRIB_DEPRECATED __attribute__ ((__deprecated__))
-#if __MINGW_GNUC_PREREQ (4, 5) || defined (__clang__)
-#define __MINGW_ATTRIB_DEPRECATED_MSG(x) __attribute__ ((__deprecated__(x)))
-#endif
-#elif __MINGW_MSC_PREREQ(12, 0)
-#define __MINGW_ATTRIB_USED
-#define __MINGW_ATTRIB_DEPRECATED __declspec(deprecated)
-#else
-#define __MINGW_ATTRIB_USED __MINGW_ATTRIB_UNUSED
-#define __MINGW_ATTRIB_DEPRECATED
-#endif /* GNUC >= 3.1 */
-
-#ifndef __MINGW_ATTRIB_DEPRECATED_MSG
-#define __MINGW_ATTRIB_DEPRECATED_MSG(x) __MINGW_ATTRIB_DEPRECATED
-#endif
-
-#if  __MINGW_GNUC_PREREQ (3, 3)
-#define __MINGW_NOTHROW __attribute__ ((__nothrow__))
-#elif __MINGW_MSC_PREREQ(12, 0) && defined (__cplusplus)
-#define __MINGW_NOTHROW __declspec(nothrow)
-#else
-#define __MINGW_NOTHROW
-#endif
-
-#if __MINGW_GNUC_PREREQ (4, 4)
-#define __MINGW_ATTRIB_NO_OPTIMIZE __attribute__((__optimize__ ("0")))
-#else
-#define __MINGW_ATTRIB_NO_OPTIMIZE
-#endif
-
-#if __MINGW_GNUC_PREREQ (4, 4)
-#define __MINGW_PRAGMA_PARAM(x) _Pragma (#x)
-#elif __MINGW_MSC_PREREQ (13, 1)
-#define __MINGW_PRAGMA_PARAM(x) __pragma (x)
-#else
-#define __MINGW_PRAGMA_PARAM(x)
-#endif
-
-#define __MINGW_BROKEN_INTERFACE(x) \
-  __MINGW_PRAGMA_PARAM(message ("Interface " _CRT_STRINGIZE(x) \
-  " has unverified layout."))
-
-#ifndef __MSVCRT_VERSION__
-/*  High byte is the major version, low byte is the minor. */
-# if defined(__CRTDLL__)
-#  define __MSVCRT_VERSION__ 0x00
-# elif defined(_UCRT)
-#  define __MSVCRT_VERSION__ 0xE00
-# else
-#  define __MSVCRT_VERSION__ 0xE00
-# endif
-#endif
-
-#if !defined(_UCRT) && ((__MSVCRT_VERSION__ >= 0x1400) || (__MSVCRT_VERSION__ >= 0xE00 && __MSVCRT_VERSION__ < 0x1000))
-/* Allow both 0x1400 and 0xE00 to identify UCRT */
-#define _UCRT
-#endif
-
-#ifndef _WIN32_WINNT
-#define _WIN32_WINNT 0xa00
-#endif
-
-#ifndef _INT128_DEFINED
-#define _INT128_DEFINED
-#ifdef __GNUC__
-#define __int8 char
-#define __int16 short
-#define __int32 int
-#define __int64 long long
-#ifdef _WIN64
-#if (__clang_major__ > 3 || (__clang_major__ == 3 && __clang_minor__ >= 1)) && \
-    !defined(__SIZEOF_INT128__) /* clang >= 3.1 has __int128 but no size macro */
-#define __SIZEOF_INT128__ 16
-#endif
-#ifndef __SIZEOF_INT128__
-typedef int __int128 __attribute__ ((__mode__ (TI)));
-#endif
-#endif
-#endif /* __GNUC__ */
-#endif /* _INT128_DEFINED */
-
-#ifdef __GNUC__
-#define __ptr32
-#define __ptr64
-#ifndef __unaligned
-#define __unaligned
-#endif
-#ifndef __w64
-#define __w64
-#endif
-#ifdef __cplusplus
-#define __forceinline inline __attribute__((__always_inline__))
-#else
-#define __forceinline extern __inline__ __attribute__((__always_inline__,__gnu_inline__))
-#endif /* __cplusplus */
-#endif /* __GNUC__ */
-
-#if !defined(_WIN32) && !defined(__CYGWIN__)
-#error Only Win32 target is supported!
-#endif
-
-#ifndef __nothrow
-#ifdef __cplusplus
-#define __nothrow __MINGW_NOTHROW
-#else
-#define __nothrow
-#endif
-#endif /* __nothrow */
-
-#include <vadefs.h>	/* other headers depend on this include */
-
-#ifndef _CRT_STRINGIZE
-#define __CRT_STRINGIZE(_Value) #_Value
-#define _CRT_STRINGIZE(_Value) __CRT_STRINGIZE(_Value)
-#endif /* _CRT_STRINGIZE */
-
-#ifndef _CRT_WIDE
-#define __CRT_WIDE(_String) L ## _String
-#define _CRT_WIDE(_String) __CRT_WIDE(_String)
-#endif /* _CRT_WIDE */
-
-#ifndef _W64
-#define _W64
-#endif
-
-#ifndef _CRTIMP_NOIA64
-#ifdef __ia64__
-#define _CRTIMP_NOIA64
-#else
-#define _CRTIMP_NOIA64 _CRTIMP
-#endif
-#endif /* _CRTIMP_NOIA64 */
-
-#ifndef _CRTIMP2
-#define _CRTIMP2 _CRTIMP
-#endif
-
-#ifndef _CRTIMP_ALTERNATIVE
-#define _CRTIMP_ALTERNATIVE _CRTIMP
-#define _CRT_ALTERNATIVE_IMPORTED
-#endif /* _CRTIMP_ALTERNATIVE */
-
-#ifndef _MRTIMP2
-#define _MRTIMP2  _CRTIMP
-#endif
-
-/* We have to define _DLL for gcc based mingw version. This define is set
-   by VC, when DLL-based runtime is used. So, gcc based runtime just have
-   DLL-base runtime, therefore this define has to be set.
-   As our headers are possibly used by windows compiler having a static
-   C-runtime, we make this definition gnu compiler specific here.  */
-#if !defined (_DLL) && defined (__GNUC__)
-#define _DLL
-#endif
-
-#ifndef _MT
-#define _MT
-#endif
-
-#ifndef _MCRTIMP
-#define _MCRTIMP _CRTIMP
-#endif
-
-#ifndef _CRTIMP_PURE
-#define _CRTIMP_PURE _CRTIMP
-#endif
-
-#ifndef _PGLOBAL
-#define _PGLOBAL
-#endif
-
-#ifndef _AGLOBAL
-#define _AGLOBAL
-#endif
-
-#define _SECURECRT_FILL_BUFFER_PATTERN 0xFD
-#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated)
-
-#ifndef _CRT_INSECURE_DEPRECATE_MEMORY
-#define _CRT_INSECURE_DEPRECATE_MEMORY(_Replacement)
-#endif
-
-#ifndef _CRT_INSECURE_DEPRECATE_GLOBALS
-#define _CRT_INSECURE_DEPRECATE_GLOBALS(_Replacement)
-#endif
-
-#ifndef _CRT_MANAGED_HEAP_DEPRECATE
-#define _CRT_MANAGED_HEAP_DEPRECATE
-#endif
-
-#ifndef _CRT_OBSOLETE
-#define _CRT_OBSOLETE(_NewItem)
-#endif
-
-#ifndef __WIDL__
-
-#if defined (_WIN32) && !defined (_WIN64) && !defined (__MINGW_USE_VC2005_COMPAT) && !defined (_UCRT)
-#ifndef _USE_32BIT_TIME_T
-#define _USE_32BIT_TIME_T
-#endif
-#endif
-
-#ifndef _CONST_RETURN
-#define _CONST_RETURN
-#endif
-
-#ifndef UNALIGNED
-#if defined(__ia64__) || defined(__x86_64__)
-#define UNALIGNED __unaligned
-#else
-#define UNALIGNED
-#endif
-#endif /* UNALIGNED */
-
-#ifndef _CRT_ALIGN
-#ifdef  _MSC_VER
-#define _CRT_ALIGN(x) __declspec(align(x))
-#else /* __GNUC__ */
-#define _CRT_ALIGN(x) __attribute__ ((__aligned__ (x)))
-#endif
-#endif /* _CRT_ALIGN */
-
-#endif /* __WIDL__ */
-
-#ifndef __CRTDECL
-#define __CRTDECL __cdecl
-#endif
-
-#define _ARGMAX 100
-
-#ifndef _TRUNCATE
-#define _TRUNCATE ((size_t)-1)
-#endif
-
-#ifndef _CRT_UNUSED
-#define _CRT_UNUSED(x) (void)x
-#endif
-
-/* MSVC defines _NATIVE_NULLPTR_SUPPORTED when nullptr is supported. We emulate it here for GCC. */
-#if __MINGW_GNUC_PREREQ(4, 6)
-#if defined(__GNUC__) && (defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L)
-#define _NATIVE_NULLPTR_SUPPORTED
-#endif
-#endif
-
-/* We are activating __USE_MINGW_ANSI_STDIO for various define indicators.
- * printf ll modifier (unsupported by msvcrt.dll) is required by C99 and C++11 standards. */
-#if (defined (_POSIX) || defined (_POSIX_SOURCE) || defined (_POSIX_C_SOURCE) \
-     || defined (_ISOC99_SOURCE) \
-     || (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L && __MSVCRT_VERSION__ < 0xE00) \
-     || (defined (__cplusplus) && __cplusplus >= 201103L && __MSVCRT_VERSION__ < 0xE00) \
-     || defined (_XOPEN_SOURCE) || defined (_XOPEN_SOURCE_EXTENDED) \
-     || defined (_GNU_SOURCE) \
-     || defined (_SVID_SOURCE)) \
-    && !defined(__USE_MINGW_ANSI_STDIO)
-/* Enable __USE_MINGW_ANSI_STDIO if user did _not_ specify it explicitly... */
-#  define __USE_MINGW_ANSI_STDIO			1
-#endif
-
-/* We are defining __USE_MINGW_ANSI_STDIO as 0 or 1 */
-#if !defined(__USE_MINGW_ANSI_STDIO)
-#define __USE_MINGW_ANSI_STDIO 0      /* was not defined so it should be 0 */
-#elif (__USE_MINGW_ANSI_STDIO + 0) != 0 || (1 - __USE_MINGW_ANSI_STDIO - 1) == 2
-#define __USE_MINGW_ANSI_STDIO 1      /* was defined as nonzero or empty so it should be 1 */
-#else
-#define __USE_MINGW_ANSI_STDIO 0      /* was defined as (int)zero and non-empty so it should be 0 */
-#endif
-
-/* _dowildcard is an int that controls the globbing of the command line.
- * The MinGW32 (mingw.org) runtime calls it _CRT_glob, so we are adding
- * a compatibility definition here:  you can use either of _CRT_glob or
- * _dowildcard .
- * If _dowildcard is non-zero, the command line will be globbed:  *.*
- * will be expanded to be all files in the startup directory.
- * In the mingw-w64 library a _dowildcard variable is defined as being
- * 0, therefore command line globbing is DISABLED by default. To turn it
- * on and to leave wildcard command line processing MS's globbing code,
- * include a line in one of your source modules defining _dowildcard and
- * setting it to -1, like so:
- * int _dowildcard = -1;
- */
-#undef  _CRT_glob
-#define _CRT_glob _dowildcard
-
-
-#if defined(_MSC_VER) && !defined(_MSC_EXTENSIONS)
-#define NONAMELESSUNION		1
-#endif
-#if defined(NONAMELESSSTRUCT) && \
-   !defined(NONAMELESSUNION)
-#define NONAMELESSUNION		1
-#endif
-#if defined(NONAMELESSUNION)  && \
-   !defined(NONAMELESSSTRUCT)
-#define NONAMELESSSTRUCT	1
-#endif
-
-#ifndef __ANONYMOUS_DEFINED
-#define __ANONYMOUS_DEFINED
-#define _ANONYMOUS_UNION  __MINGW_EXTENSION
-#define _ANONYMOUS_STRUCT __MINGW_EXTENSION
-#ifndef NONAMELESSUNION
-#define _UNION_NAME(x)
-#define _STRUCT_NAME(x)
-#else /* NONAMELESSUNION */
-#define _UNION_NAME(x)  x
-#define _STRUCT_NAME(x) x
-#endif
-#endif	/* __ANONYMOUS_DEFINED */
-
-#ifndef DUMMYUNIONNAME
-# ifdef NONAMELESSUNION
-#  define DUMMYUNIONNAME  u
-#  define DUMMYUNIONNAME1 u1	/* Wine uses this variant */
-#  define DUMMYUNIONNAME2 u2
-#  define DUMMYUNIONNAME3 u3
-#  define DUMMYUNIONNAME4 u4
-#  define DUMMYUNIONNAME5 u5
-#  define DUMMYUNIONNAME6 u6
-#  define DUMMYUNIONNAME7 u7
-#  define DUMMYUNIONNAME8 u8
-#  define DUMMYUNIONNAME9 u9
-# else /* NONAMELESSUNION */
-#  define DUMMYUNIONNAME
-#  define DUMMYUNIONNAME1	/* Wine uses this variant */
-#  define DUMMYUNIONNAME2
-#  define DUMMYUNIONNAME3
-#  define DUMMYUNIONNAME4
-#  define DUMMYUNIONNAME5
-#  define DUMMYUNIONNAME6
-#  define DUMMYUNIONNAME7
-#  define DUMMYUNIONNAME8
-#  define DUMMYUNIONNAME9
-# endif
-#endif	/* DUMMYUNIONNAME */
-
-#ifndef DUMMYSTRUCTNAME
-# ifdef NONAMELESSUNION
-#  define DUMMYSTRUCTNAME  s
-#  define DUMMYSTRUCTNAME1 s1	/* Wine uses this variant */
-#  define DUMMYSTRUCTNAME2 s2
-#  define DUMMYSTRUCTNAME3 s3
-#  define DUMMYSTRUCTNAME4 s4
-#  define DUMMYSTRUCTNAME5 s5
-# else
-#  define DUMMYSTRUCTNAME
-#  define DUMMYSTRUCTNAME1	/* Wine uses this variant */
-#  define DUMMYSTRUCTNAME2
-#  define DUMMYSTRUCTNAME3
-#  define DUMMYSTRUCTNAME4
-#  define DUMMYSTRUCTNAME5
-# endif
-#endif /* DUMMYSTRUCTNAME */
-
-
-/* Macros for __uuidof template-based emulation */
-#if defined(__cplusplus) && (USE___UUIDOF == 0)
-
-#if __cpp_constexpr >= 200704l && __cpp_inline_variables >= 201606L
-#define __CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)    \
-    extern "C++" {                                               \
-    template<> struct __mingw_uuidof_s<type> {                   \
-        static constexpr IID __uuid_inst = {                     \
-            l,w1,w2, {b1,b2,b3,b4,b5,b6,b7,b8}                   \
-        };                                                       \
-    };                                                           \
-    template<> constexpr const GUID &__mingw_uuidof<type>() {    \
-        return __mingw_uuidof_s<type>::__uuid_inst;              \
-    }                                                            \
-    template<> constexpr const GUID &__mingw_uuidof<type*>() {   \
-        return  __mingw_uuidof_s<type>::__uuid_inst;             \
-    }                                                            \
-    }
-#else
-#define __CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)           \
-    extern "C++" {                                                      \
-    template<> inline const GUID &__mingw_uuidof<type>() {              \
-        static const IID __uuid_inst = {l,w1,w2, {b1,b2,b3,b4,b5,b6,b7,b8}}; \
-        return __uuid_inst;                                             \
-    }                                                                   \
-    template<> inline const GUID &__mingw_uuidof<type*>() {             \
-        return __mingw_uuidof<type>();                                  \
-    }                                                                   \
-    }
-#endif
-
-#define __uuidof(type) __mingw_uuidof<__typeof(type)>()
-
-#else
-
-#define __CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)
-
-#endif
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-
-#ifdef __MINGW_INTRIN_INLINE
-#ifdef __has_builtin
-#define __MINGW_DEBUGBREAK_IMPL !__has_builtin(__debugbreak)
-#else
-#define __MINGW_DEBUGBREAK_IMPL 1
-#endif
-#if __MINGW_DEBUGBREAK_IMPL == 1
-void __cdecl __debugbreak(void);
-__MINGW_INTRIN_INLINE void __cdecl __debugbreak(void)
-{
-#if defined(__i386__) || defined(__x86_64__)
-  __asm__ __volatile__("int {$}3":);
-#elif defined(__arm__)
-  __asm__ __volatile__("udf #0xfe");
-#elif defined(__aarch64__)
-  __asm__ __volatile__("brk #0xf000");
-#else
-  __asm__ __volatile__("unimplemented");
-#endif
-}
-#endif
-#endif
-
-/* mingw-w64 specific functions: */
-const char *__mingw_get_crt_info (void);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif /* _INC__MINGW_H */
-
-#ifndef MINGW_SDK_INIT
-#define MINGW_SDK_INIT
-
-/* for backward compatibility */
-#ifndef MINGW_HAS_SECURE_API
-#define MINGW_HAS_SECURE_API 1
-#endif
-
-#define __STDC_SECURE_LIB__ 200411L
-#define __GOT_SECURE_LIB__ __STDC_SECURE_LIB__
-
-#ifndef __WIDL__
-#include "sdks/_mingw_ddk.h"
-#endif
-
-#endif /* MINGW_SDK_INIT */
diff -Nru orig/affxparser/src/_mingw_gcc463.h patched/affxparser/src/_mingw_gcc463.h
--- orig/affxparser/src/_mingw_gcc463.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/_mingw_gcc463.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,730 +0,0 @@
-/**
- * This file has no copyright assigned and is placed in the Public Domain.
- * This file is part of the w64 mingw-runtime package.
- * No warranty is given; refer to the file DISCLAIMER.PD within this package.
- */
-
-#ifndef _INC_CRTDEFS
-#define _INC_CRTDEFS
-
-#include "_mingw_mac.h"
-
-/* C/C++ specific language defines.  */
-#ifdef _WIN64
-#ifdef __stdcall
-#undef __stdcall
-#endif
-#define __stdcall
-#endif
-
-#ifndef __GNUC__
-# ifndef __MINGW_IMPORT
-#  define __MINGW_IMPORT  __declspec(dllimport)
-# endif
-# ifndef _CRTIMP
-#  define _CRTIMP  __declspec(dllimport)
-# endif
-# define __DECLSPEC_SUPPORTED
-# define __attribute__(x) /* nothing */
-#else /* __GNUC__ */
-# ifdef __declspec
-#  ifndef __MINGW_IMPORT
-/* Note the extern. This is needed to work around GCC's
-limitations in handling dllimport attribute.  */
-#   define __MINGW_IMPORT  extern __attribute__ ((__dllimport__))
-#  endif
-#  ifndef _CRTIMP
-#    undef __USE_CRTIMP
-#    if !defined (_CRTBLD) && !defined (_SYSCRT)
-#      define __USE_CRTIMP 1
-#    endif
-#    ifdef __USE_CRTIMP
-#      define _CRTIMP  __attribute__ ((__dllimport__))
-#    else
-#      define _CRTIMP
-#    endif
-#  endif
-#  define __DECLSPEC_SUPPORTED
-# else /* __declspec */
-#  undef __DECLSPEC_SUPPORTED
-#  undef __MINGW_IMPORT
-#  ifndef _CRTIMP
-#   define _CRTIMP
-#  endif
-# endif /* __declspec */
-#endif /* __GNUC__ */
-
-#if defined (__GNUC__) && defined (__GNUC_MINOR__)
-#define __MINGW_GNUC_PREREQ(major, minor) \
-  (__GNUC__ > (major) \
-   || (__GNUC__ == (major) && __GNUC_MINOR__ >= (minor)))
-#else
-#define __MINGW_GNUC_PREREQ(major, minor)  0
-#endif
-
-#if defined (_MSC_VER)
-#define __MINGW_MSC_PREREQ(major, minor) \
-  (_MSC_VER >= (major * 100 + minor * 10))
-#else
-#define __MINGW_MSC_PREREQ(major, minor)   0
-#endif
-
-#ifdef _MSC_VER
-#define USE___UUIDOF	0
-#else
-#define USE___UUIDOF	0
-#endif
-
-#ifdef __cplusplus
-# define __CRT_INLINE inline
-#elif defined(_MSC_VER)
-# define __CRT_INLINE __inline
-#else
-# if ( __MINGW_GNUC_PREREQ(4, 3)  &&  __STDC_VERSION__ >= 199901L) \
-     || (defined (__clang__))
-#  define __CRT_INLINE extern inline __attribute__((__gnu_inline__))
-# else
-#  define __CRT_INLINE extern __inline__
-# endif
-#endif
-
-#if !defined(__MINGW_INTRIN_INLINE) && defined(__GNUC__)
-#define __MINGW_INTRIN_INLINE extern __inline__ __attribute__((__always_inline__,__gnu_inline__))
-#endif
-
-#ifdef __NO_INLINE__
-#undef __CRT__NO_INLINE
-#define __CRT__NO_INLINE 1
-#endif
-
-#ifdef __cplusplus
-# define __UNUSED_PARAM(x)
-#else
-# ifdef __GNUC__
-#  define __UNUSED_PARAM(x) x __attribute__ ((__unused__))
-# else
-#  define __UNUSED_PARAM(x) x
-# endif
-#endif
-
-#ifndef __GNUC__
-# ifdef _MSC_VER
-#  define __restrict__  __restrict
-# else
-#  define __restrict__	/* nothing */
-# endif
-#endif /* !__GNUC__ */
-
-#if __MINGW_GNUC_PREREQ (3,1) && !defined __GNUG__
-# define __restrict_arr __restrict
-#elif defined(_MSC_VER)
-# define __restrict_arr __restrict
-#else
-# ifdef __GNUC__
-#  define __restrict_arr        /* Not supported in old GCC.  */
-# else
-#  if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L
-#   define __restrict_arr       restrict
-#  else
-#   define __restrict_arr       /* Not supported.  */
-#  endif
-# endif
-#endif
-
-#ifdef __GNUC__
-#define __MINGW_ATTRIB_NORETURN __attribute__ ((__noreturn__))
-#define __MINGW_ATTRIB_CONST __attribute__ ((__const__))
-#elif __MINGW_MSC_PREREQ(12, 0)
-#define __MINGW_ATTRIB_NORETURN __declspec(noreturn)
-#define __MINGW_ATTRIB_CONST
-#else
-#define __MINGW_ATTRIB_NORETURN
-#define __MINGW_ATTRIB_CONST
-#endif
-
-#if __MINGW_GNUC_PREREQ (3, 0)
-#define __MINGW_ATTRIB_MALLOC __attribute__ ((__malloc__))
-#define __MINGW_ATTRIB_PURE __attribute__ ((__pure__))
-#elif __MINGW_MSC_PREREQ(14, 0)
-#define __MINGW_ATTRIB_MALLOC __declspec(noalias) __declspec(restrict)
-#define __MINGW_ATTRIB_PURE
-#else
-#define __MINGW_ATTRIB_MALLOC
-#define __MINGW_ATTRIB_PURE
-#endif
-
-/* Attribute `nonnull' was valid as of gcc 3.3.  We don't use GCC's
-   variadiac macro facility, because variadic macros cause syntax
-   errors with  --traditional-cpp.  */
-#if  __MINGW_GNUC_PREREQ (3, 3)
-#define __MINGW_ATTRIB_NONNULL(arg) __attribute__ ((__nonnull__ (arg)))
-#else
-#define __MINGW_ATTRIB_NONNULL(arg)
-#endif /* GNUC >= 3.3 */
-
-#ifdef __GNUC__
-#define __MINGW_ATTRIB_UNUSED __attribute__ ((__unused__))
-#else
-#define __MINGW_ATTRIB_UNUSED
-#endif /* ATTRIBUTE_UNUSED */
-
-#if  __MINGW_GNUC_PREREQ (3, 1)
-#define __MINGW_ATTRIB_USED __attribute__ ((__used__))
-#define __MINGW_ATTRIB_DEPRECATED __attribute__ ((__deprecated__))
-#elif __MINGW_MSC_PREREQ(12, 0)
-#define __MINGW_ATTRIB_USED
-#define __MINGW_ATTRIB_DEPRECATED __declspec(deprecated)
-#else
-#define __MINGW_ATTRIB_USED __MINGW_ATTRIB_UNUSED
-#define __MINGW_ATTRIB_DEPRECATED
-#endif /* GNUC >= 3.1 */
-
-#if  __MINGW_GNUC_PREREQ (3, 3)
-#define __MINGW_NOTHROW __attribute__ ((__nothrow__))
-#elif __MINGW_MSC_PREREQ(12, 0) && defined (__cplusplus)
-#define __MINGW_NOTHROW __declspec(nothrow)
-#else
-#define __MINGW_NOTHROW
-#endif
-
-#if __MINGW_GNUC_PREREQ (4, 4)
-#define __MINGW_ATTRIB_NO_OPTIMIZE __attribute__((__optimize__ ("0")))
-#else
-#define __MINGW_ATTRIB_NO_OPTIMIZE
-#endif
-
-#if __MINGW_GNUC_PREREQ (4, 4)
-#define __MINGW_PRAGMA_PARAM(x) _Pragma (#x)
-#elif __MINGW_MSC_PREREQ (13, 1)
-#define __MINGW_PRAGMA_PARAM(x) __pragma (x)
-#else
-#define __MINGW_PRAGMA_PARAM(x)
-#endif
-
-#define __MINGW_BROKEN_INTERFACE(x) \
-  __MINGW_PRAGMA_PARAM(message ("Interface " _CRT_STRINGIZE(x) \
-  " has unverified layout."))
-
-#ifdef __MINGW_MSVC_COMPAT_WARNINGS
-# if __MINGW_GNUC_PREREQ (4, 5)
-#  define __MINGW_ATTRIB_DEPRECATED_STR(X) __attribute__ ((__deprecated__ (X)))
-# else
-#  define __MINGW_ATTRIB_DEPRECATED_STR(X) __MINGW_ATTRIB_DEPRECATED
-# endif
-#else
-# define __MINGW_ATTRIB_DEPRECATED_STR(X)
-#endif
-
-#define __MINGW_SEC_WARN_STR "This function or variable may be unsafe, use _CRT_SECURE_NO_WARNINGS to disable deprecation"
-#define __MINGW_MSVC2005_DEPREC_STR "This POSIX function is deprecated beginning in Visual C++ 2005, use _CRT_NONSTDC_NO_DEPRECATE to disable deprecation"
-
-#if !defined (_CRT_NONSTDC_NO_DEPRECATE)
-# define __MINGW_ATTRIB_DEPRECATED_MSVC2005 __MINGW_ATTRIB_DEPRECATED_STR (__MINGW_MSVC2005_DEPREC_STR)
-#else
-# define __MINGW_ATTRIB_DEPRECATED_MSVC2005
-#endif
-
-#if !defined (_CRT_SECURE_NO_WARNINGS)
-# define __MINGW_ATTRIB_DEPRECATED_SEC_WARN __MINGW_ATTRIB_DEPRECATED_STR (__MINGW_SEC_WARN_STR)
-#else
-# define __MINGW_ATTRIB_DEPRECATED_SEC_WARN
-#endif
-
-#ifndef __MSVCRT_VERSION__
-/*  High byte is the major version, low byte is the minor. */
-# define __MSVCRT_VERSION__ 0x0700
-#endif
-
-
-#ifndef WINVER
-#define WINVER 0x0502
-#endif
-
-#ifndef _WIN32_WINNT
-#define _WIN32_WINNT 0x502
-#endif
-
-#ifndef _INT128_DEFINED
-#define _INT128_DEFINED
-#ifdef __GNUC__
-#define __int8 char
-#define __int16 short
-#define __int32 int
-#define __int64 long long
-#ifdef _WIN64
-#ifndef __SIZEOF_INT128__
-typedef int __int128 __attribute__ ((__mode__ (TI)));
-#endif
-#endif
-#endif /* __GNUC__ */
-#endif /* _INT128_DEFINED */
-
-#ifdef __GNUC__
-#define __ptr32
-#define __ptr64
-#ifndef __unaligned
-#define __unaligned
-#endif
-#ifndef __w64
-#define __w64
-#endif
-#ifdef __cplusplus
-#define __forceinline inline __attribute__((__always_inline__))
-#else
-#define __forceinline extern __inline__ __attribute__((__always_inline__,__gnu_inline__))
-#endif /* __cplusplus */
-#endif /* __GNUC__ */
-
-#ifndef _WIN32
-#error Only Win32 target is supported!
-#endif
-
-#ifndef __nothrow
-#ifdef __cplusplus
-#define __nothrow __declspec(nothrow)
-#else
-#define __nothrow
-#endif
-#endif /* __nothrow */
-
-#undef _CRT_PACKING
-#define _CRT_PACKING 8
-
-#include <vadefs.h>	/* other headers depend on this include */
-
-#pragma pack(push,_CRT_PACKING)
-
-#ifndef _CRT_STRINGIZE
-#define __CRT_STRINGIZE(_Value) #_Value
-#define _CRT_STRINGIZE(_Value) __CRT_STRINGIZE(_Value)
-#endif /* _CRT_STRINGIZE */
-
-#ifndef _CRT_WIDE
-#define __CRT_WIDE(_String) L ## _String
-#define _CRT_WIDE(_String) __CRT_WIDE(_String)
-#endif /* _CRT_WIDE */
-
-#ifndef _W64
-#define _W64
-#endif
-
-#ifndef _CRTIMP_NOIA64
-#ifdef __ia64__
-#define _CRTIMP_NOIA64
-#else
-#define _CRTIMP_NOIA64 _CRTIMP
-#endif
-#endif /* _CRTIMP_NOIA64 */
-
-#ifndef _CRTIMP2
-#define _CRTIMP2 _CRTIMP
-#endif
-
-#ifndef _CRTIMP_ALTERNATIVE
-#define _CRTIMP_ALTERNATIVE _CRTIMP
-#define _CRT_ALTERNATIVE_IMPORTED
-#endif /* _CRTIMP_ALTERNATIVE */
-
-#ifndef _MRTIMP2
-#define _MRTIMP2  _CRTIMP
-#endif
-
-/* We have to define _DLL for gcc based mingw version. This define is set
-   by VC, when DLL-based runtime is used. So, gcc based runtime just have
-   DLL-base runtime, therefore this define has to be set.
-   As our headers are possibly used by windows compiler having a static
-   C-runtime, we make this definition gnu compiler specific here.  */
-#if !defined (_DLL) && defined (__GNUC__)
-#define _DLL
-#endif
-
-#ifndef _MT
-#define _MT
-#endif
-
-#ifndef _MCRTIMP
-#define _MCRTIMP _CRTIMP
-#endif
-
-#ifndef _CRTIMP_PURE
-#define _CRTIMP_PURE _CRTIMP
-#endif
-
-#ifndef _PGLOBAL
-#define _PGLOBAL
-#endif
-
-#ifndef _AGLOBAL
-#define _AGLOBAL
-#endif
-
-#define _SECURECRT_FILL_BUFFER_PATTERN 0xFD
-#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated)
-
-#ifndef _CRT_INSECURE_DEPRECATE_MEMORY
-#define _CRT_INSECURE_DEPRECATE_MEMORY(_Replacement)
-#endif
-
-#ifndef _CRT_INSECURE_DEPRECATE_GLOBALS
-#define _CRT_INSECURE_DEPRECATE_GLOBALS(_Replacement)
-#endif
-
-#ifndef _CRT_MANAGED_HEAP_DEPRECATE
-#define _CRT_MANAGED_HEAP_DEPRECATE
-#endif
-
-#ifndef _CRT_OBSOLETE
-#define _CRT_OBSOLETE(_NewItem)
-#endif
-
-#ifndef _SIZE_T_DEFINED
-#define _SIZE_T_DEFINED
-#undef size_t
-#ifdef _WIN64
-__MINGW_EXTENSION typedef unsigned __int64 size_t;
-#else
-typedef unsigned int size_t;
-#endif /* _WIN64 */
-#endif /* _SIZE_T_DEFINED */
-
-#ifndef _SSIZE_T_DEFINED
-#define _SSIZE_T_DEFINED
-#undef ssize_t
-#ifdef _WIN64
-__MINGW_EXTENSION typedef __int64 ssize_t;
-#else
-typedef int ssize_t;
-#endif /* _WIN64 */
-#endif /* _SSIZE_T_DEFINED */
-
-#ifndef _INTPTR_T_DEFINED
-#define _INTPTR_T_DEFINED
-#ifndef __intptr_t_defined
-#define __intptr_t_defined
-#undef intptr_t
-#ifdef _WIN64
-__MINGW_EXTENSION typedef __int64 intptr_t;
-#else
-typedef int intptr_t;
-#endif /* _WIN64 */
-#endif /* __intptr_t_defined */
-#endif /* _INTPTR_T_DEFINED */
-
-#ifndef _UINTPTR_T_DEFINED
-#define _UINTPTR_T_DEFINED
-#ifndef __uintptr_t_defined
-#define __uintptr_t_defined
-#undef uintptr_t
-#ifdef _WIN64
-__MINGW_EXTENSION typedef unsigned __int64 uintptr_t;
-#else
-typedef unsigned int uintptr_t;
-#endif /* _WIN64 */
-#endif /* __uintptr_t_defined */
-#endif /* _UINTPTR_T_DEFINED */
-
-#ifndef _PTRDIFF_T_DEFINED
-#define _PTRDIFF_T_DEFINED
-#ifndef _PTRDIFF_T_
-#define _PTRDIFF_T_
-#undef ptrdiff_t
-#ifdef _WIN64
-__MINGW_EXTENSION typedef __int64 ptrdiff_t;
-#else
-typedef int ptrdiff_t;
-#endif /* _WIN64 */
-#endif /* _PTRDIFF_T_ */
-#endif /* _PTRDIFF_T_DEFINED */
-
-#ifndef _WCHAR_T_DEFINED
-#define _WCHAR_T_DEFINED
-#ifndef __cplusplus
-typedef unsigned short wchar_t;
-#endif /* C++ */
-#endif /* _WCHAR_T_DEFINED */
-
-#ifndef _WCTYPE_T_DEFINED
-#define _WCTYPE_T_DEFINED
-#ifndef _WINT_T
-#define _WINT_T
-typedef unsigned short wint_t;
-typedef unsigned short wctype_t;
-#endif /* _WINT_T */
-#endif /* _WCTYPE_T_DEFINED */
-
-#if defined (_WIN32) && !(defined(_FILE_OFFSET_BITS) && _FILE_OFFSET_BITS == 64) && !defined (_WIN64) && !defined (__MINGW_USE_VC2005_COMPAT)
-#ifndef _USE_32BIT_TIME_T
-#define _USE_32BIT_TIME_T
-#endif
-#endif
-
-#ifdef _USE_32BIT_TIME_T
-#ifdef _WIN64
-#error You cannot use 32-bit time_t (_USE_32BIT_TIME_T) with _WIN64
-#undef _USE_32BIT_TIME_T
-#endif
-#endif /* _USE_32BIT_TIME_T */
-
-#ifndef _ERRCODE_DEFINED
-#define _ERRCODE_DEFINED
-typedef int errno_t;
-#endif
-
-#ifndef _TIME32_T_DEFINED
-#define _TIME32_T_DEFINED
-typedef long __time32_t;
-#endif
-
-#ifndef _TIME64_T_DEFINED
-#define _TIME64_T_DEFINED
-__MINGW_EXTENSION typedef __int64 __time64_t;
-#endif /* _TIME64_T_DEFINED */
-
-#ifndef _TIME_T_DEFINED
-#define _TIME_T_DEFINED
-#ifdef _USE_32BIT_TIME_T
-typedef __time32_t time_t;
-#else
-typedef __time64_t time_t;
-#endif
-#endif /* _TIME_T_DEFINED */
-
-#ifndef _CONST_RETURN
-#define _CONST_RETURN
-#endif
-
-#ifndef UNALIGNED
-#if defined(_M_IA64) || defined(_M_AMD64)
-#define UNALIGNED __unaligned
-#else
-#define UNALIGNED
-#endif
-#endif /* UNALIGNED */
-
-#ifndef _CRT_ALIGN
-#ifdef  _MSC_VER
-#define _CRT_ALIGN(x) __declspec(align(x))
-#else /* __GNUC__ */
-#define _CRT_ALIGN(x) __attribute__ ((__aligned__ (x)))
-#endif
-#endif /* _CRT_ALIGN */
-
-#ifndef __CRTDECL
-#define __CRTDECL __cdecl
-#endif
-
-#define _ARGMAX 100
-
-#ifndef _TRUNCATE
-#define _TRUNCATE ((size_t)-1)
-#endif
-
-#ifndef _CRT_UNUSED
-#define _CRT_UNUSED(x) (void)x
-#endif
-
-#if defined(_POSIX) && !defined(__USE_MINGW_ANSI_STDIO)
-/* Enable __USE_MINGW_ANSI_STDIO if _POSIX defined
- * and If user did _not_ specify it explicitly... */
-#  define __USE_MINGW_ANSI_STDIO			1
-#endif
-
-/* _dowildcard is an int that controls the globbing of the command line.
- * The MinGW32 (mingw.org) runtime calls it _CRT_glob, so we are adding
- * a compatibility definition here:  you can use either of _CRT_glob or
- * _dowildcard .
- * If _dowildcard is non-zero, the command line will be globbed:  *.*
- * will be expanded to be all files in the startup directory.
- * In the mingw-w64 library a _dowildcard variable is defined as being
- * 0, therefore command line globbing is DISABLED by default. To turn it
- * on and to leave wildcard command line processing MS's globbing code,
- * include a line in one of your source modules defining _dowildcard and
- * setting it to -1, like so:
- * int _dowildcard = -1;
- */
-#undef  _CRT_glob
-#define _CRT_glob _dowildcard
-
-
-#if defined(_MSC_VER) && !defined(_MSC_EXTENSIONS)
-#define NONAMELESSUNION		1
-#endif
-#if defined(NONAMELESSSTRUCT) && \
-   !defined(NONAMELESSUNION)
-#define NONAMELESSUNION		1
-#endif
-#if defined(NONAMELESSUNION)  && \
-   !defined(NONAMELESSSTRUCT)
-#define NONAMELESSSTRUCT	1
-#endif
-
-#ifndef __ANONYMOUS_DEFINED
-#define __ANONYMOUS_DEFINED
-#define _ANONYMOUS_UNION  __MINGW_EXTENSION
-#define _ANONYMOUS_STRUCT __MINGW_EXTENSION
-#ifndef NONAMELESSUNION
-#define _UNION_NAME(x)
-#define _STRUCT_NAME(x)
-#else /* NONAMELESSUNION */
-#define _UNION_NAME(x)  x
-#define _STRUCT_NAME(x) x
-#endif
-#endif	/* __ANONYMOUS_DEFINED */
-
-#ifndef DUMMYUNIONNAME
-# ifdef NONAMELESSUNION
-#  define DUMMYUNIONNAME  u
-#  define DUMMYUNIONNAME1 u1	/* Wine uses this variant */
-#  define DUMMYUNIONNAME2 u2
-#  define DUMMYUNIONNAME3 u3
-#  define DUMMYUNIONNAME4 u4
-#  define DUMMYUNIONNAME5 u5
-#  define DUMMYUNIONNAME6 u6
-#  define DUMMYUNIONNAME7 u7
-#  define DUMMYUNIONNAME8 u8
-#  define DUMMYUNIONNAME9 u9
-# else /* NONAMELESSUNION */
-#  define DUMMYUNIONNAME
-#  define DUMMYUNIONNAME1	/* Wine uses this variant */
-#  define DUMMYUNIONNAME2
-#  define DUMMYUNIONNAME3
-#  define DUMMYUNIONNAME4
-#  define DUMMYUNIONNAME5
-#  define DUMMYUNIONNAME6
-#  define DUMMYUNIONNAME7
-#  define DUMMYUNIONNAME8
-#  define DUMMYUNIONNAME9
-# endif
-#endif	/* DUMMYUNIONNAME */
-
-#ifndef DUMMYSTRUCTNAME
-# ifdef NONAMELESSUNION
-#  define DUMMYSTRUCTNAME  s
-#  define DUMMYSTRUCTNAME1 s1	/* Wine uses this variant */
-#  define DUMMYSTRUCTNAME2 s2
-#  define DUMMYSTRUCTNAME3 s3
-#  define DUMMYSTRUCTNAME4 s4
-#  define DUMMYSTRUCTNAME5 s5
-# else
-#  define DUMMYSTRUCTNAME
-#  define DUMMYSTRUCTNAME1	/* Wine uses this variant */
-#  define DUMMYSTRUCTNAME2
-#  define DUMMYSTRUCTNAME3
-#  define DUMMYSTRUCTNAME4
-#  define DUMMYSTRUCTNAME5
-# endif
-#endif /* DUMMYSTRUCTNAME */
-
-
-/* Macros for __uuidof template-based emulation */
-#if defined(__cplusplus) && (USE___UUIDOF == 0)
-
-#define __CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)           \
-    extern "C++" {                                                      \
-    template<> inline const GUID &__mingw_uuidof<type>() {              \
-        return (const IID){l,w1,w2, {b1,b2,b3,b4,b5,b6,b7,b8}};         \
-    }                                                                   \
-    template<> inline const GUID &__mingw_uuidof<type*>() {             \
-        return __mingw_uuidof<type>();                                  \
-    }                                                                   \
-    }
-
-#define __uuidof(type) __mingw_uuidof<typeof(type)>()
-
-#else
-
-#define __CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)
-
-#endif
-
-
-/* MSVC-isms: */
-
-struct threadlocaleinfostruct;
-struct threadmbcinfostruct;
-typedef struct threadlocaleinfostruct *pthreadlocinfo;
-typedef struct threadmbcinfostruct *pthreadmbcinfo;
-struct __lc_time_data;
-
-typedef struct localeinfo_struct {
-  pthreadlocinfo locinfo;
-  pthreadmbcinfo mbcinfo;
-} _locale_tstruct,*_locale_t;
-
-#ifndef _TAGLC_ID_DEFINED
-#define _TAGLC_ID_DEFINED
-typedef struct tagLC_ID {
-  unsigned short wLanguage;
-  unsigned short wCountry;
-  unsigned short wCodePage;
-} LC_ID,*LPLC_ID;
-#endif /* _TAGLC_ID_DEFINED */
-
-#ifndef _THREADLOCALEINFO
-#define _THREADLOCALEINFO
-typedef struct threadlocaleinfostruct {
-  int refcount;
-  unsigned int lc_codepage;
-  unsigned int lc_collate_cp;
-  unsigned long lc_handle[6];
-  LC_ID lc_id[6];
-  struct {
-    char *locale;
-    wchar_t *wlocale;
-    int *refcount;
-    int *wrefcount;
-  } lc_category[6];
-  int lc_clike;
-  int mb_cur_max;
-  int *lconv_intl_refcount;
-  int *lconv_num_refcount;
-  int *lconv_mon_refcount;
-  struct lconv *lconv;
-  int *ctype1_refcount;
-  unsigned short *ctype1;
-  const unsigned short *pctype;
-  const unsigned char *pclmap;
-  const unsigned char *pcumap;
-  struct __lc_time_data *lc_time_curr;
-} threadlocinfo;
-#endif /* _THREADLOCALEINFO */
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#ifdef __MINGW_INTRIN_INLINE
-#if !defined (__clang__)
-void __cdecl __debugbreak(void);
-__MINGW_INTRIN_INLINE void __cdecl __debugbreak(void)
-{
-  __asm__ __volatile__("int $3");
-}
-#endif
-#endif
-
-/* mingw-w64 specific functions: */
-const char *__mingw_get_crt_info (void);
-
-#ifdef __cplusplus
-}
-#endif
-
-#pragma pack(pop)
-
-#endif /* _INC_CRTDEFS */
-
-#ifndef MINGW_SDK_INIT
-#define MINGW_SDK_INIT
-
-#define MINGW_HAS_SECURE_API 1
-
-#ifdef MINGW_HAS_SECURE_API
-#define __STDC_SECURE_LIB__ 200411L
-#define __GOT_SECURE_LIB__ __STDC_SECURE_LIB__
-#endif
-
-#include "sdks/_mingw_directx.h"
-#include "sdks/_mingw_ddk.h"
-
-#endif /* MINGW_SDK_INIT */
diff -Nru orig/affxparser/src/_mingw_gcc493.h patched/affxparser/src/_mingw_gcc493.h
--- orig/affxparser/src/_mingw_gcc493.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/_mingw_gcc493.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,690 +0,0 @@
-/**
- * This file has no copyright assigned and is placed in the Public Domain.
- * This file is part of the mingw-w64 runtime package.
- * No warranty is given; refer to the file DISCLAIMER.PD within this package.
- */
-
-#ifndef _INC__MINGW_H
-#define _INC__MINGW_H
-
-#define MINGW_HAS_SECURE_API 1
-
-#include "_mingw_mac.h"
-#include "_mingw_secapi.h"
-
-/* Include _cygwin.h if we're building a Cygwin application. */
-#ifdef __CYGWIN__
-#include "_cygwin.h"
-#endif
-
-/* Target specific macro replacement for type "long".  In the Windows API,
-   the type long is always 32 bit, even if the target is 64 bit (LLP64).
-   On 64 bit Cygwin, the type long is 64 bit (LP64).  So, to get the right
-   sized definitions and declarations, all usage of type long in the Windows
-   headers have to be replaced by the below defined macro __LONG32. */
-#ifndef __LP64__	/* 32 bit target, 64 bit Mingw target */
-#define __LONG32 long
-#else			/* 64 bit Cygwin target */
-#define __LONG32 int
-#endif
-
-/* C/C++ specific language defines.  */
-#ifdef _WIN64
-#ifdef __stdcall
-#undef __stdcall
-#endif
-#define __stdcall
-#endif
-
-#ifndef __GNUC__
-# ifndef __MINGW_IMPORT
-#  define __MINGW_IMPORT  __declspec(dllimport)
-# endif
-# ifndef _CRTIMP
-#  define _CRTIMP  __declspec(dllimport)
-# endif
-# define __DECLSPEC_SUPPORTED
-# define __attribute__(x) /* nothing */
-#else /* __GNUC__ */
-# ifdef __declspec
-#  ifndef __MINGW_IMPORT
-/* Note the extern. This is needed to work around GCC's
-limitations in handling dllimport attribute.  */
-#   define __MINGW_IMPORT  extern __attribute__ ((__dllimport__))
-#  endif
-#  ifndef _CRTIMP
-#    undef __USE_CRTIMP
-#    if !defined (_CRTBLD) && !defined (_SYSCRT)
-#      define __USE_CRTIMP 1
-#    endif
-#    ifdef __USE_CRTIMP
-#      define _CRTIMP  __attribute__ ((__dllimport__))
-#    else
-#      define _CRTIMP
-#    endif
-#  endif
-#  define __DECLSPEC_SUPPORTED
-# else /* __declspec */
-#  undef __DECLSPEC_SUPPORTED
-#  undef __MINGW_IMPORT
-#  ifndef _CRTIMP
-#   define _CRTIMP
-#  endif
-# endif /* __declspec */
-#endif /* __GNUC__ */
-
-#ifdef _MSC_VER
-#define USE___UUIDOF	0
-#else
-#define USE___UUIDOF	0
-#endif
-
-#if !defined(_MSC_VER) && !defined(_inline)
-#define _inline __inline
-#endif
-
-#ifdef __cplusplus
-# define __CRT_INLINE inline
-#elif defined(_MSC_VER)
-# define __CRT_INLINE __inline
-#else
-# if ( __MINGW_GNUC_PREREQ(4, 3)  &&  __STDC_VERSION__ >= 199901L) \
-     || (defined (__clang__))
-#  define __CRT_INLINE extern inline __attribute__((__gnu_inline__))
-# else
-#  define __CRT_INLINE extern __inline__
-# endif
-#endif
-
-#if !defined(__MINGW_INTRIN_INLINE) && defined(__GNUC__)
-#define __MINGW_INTRIN_INLINE extern __inline__ __attribute__((__always_inline__,__gnu_inline__))
-#endif
-
-#ifndef __CYGWIN__
-#ifdef __NO_INLINE__
-#undef __CRT__NO_INLINE
-#define __CRT__NO_INLINE 1
-#endif
-#endif
-
-#ifdef __cplusplus
-# define __UNUSED_PARAM(x)
-#else
-# ifdef __GNUC__
-#  define __UNUSED_PARAM(x) x __attribute__ ((__unused__))
-# else
-#  define __UNUSED_PARAM(x) x
-# endif
-#endif
-
-#ifndef __GNUC__
-# ifdef _MSC_VER
-#  define __restrict__  __restrict
-# else
-#  define __restrict__	/* nothing */
-# endif
-#endif /* !__GNUC__ */
-
-#if __MINGW_GNUC_PREREQ (3,1) && !defined __GNUG__
-# define __restrict_arr __restrict
-#elif defined(_MSC_VER)
-# define __restrict_arr __restrict
-#else
-# ifdef __GNUC__
-#  define __restrict_arr        /* Not supported in old GCC.  */
-# else
-#  if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L
-#   define __restrict_arr       restrict
-#  else
-#   define __restrict_arr       /* Not supported.  */
-#  endif
-# endif
-#endif
-
-#ifdef __GNUC__
-#define __MINGW_ATTRIB_NORETURN __attribute__ ((__noreturn__))
-#define __MINGW_ATTRIB_CONST __attribute__ ((__const__))
-#elif __MINGW_MSC_PREREQ(12, 0)
-#define __MINGW_ATTRIB_NORETURN __declspec(noreturn)
-#define __MINGW_ATTRIB_CONST
-#else
-#define __MINGW_ATTRIB_NORETURN
-#define __MINGW_ATTRIB_CONST
-#endif
-
-#if __MINGW_GNUC_PREREQ (3, 0)
-#define __MINGW_ATTRIB_MALLOC __attribute__ ((__malloc__))
-#define __MINGW_ATTRIB_PURE __attribute__ ((__pure__))
-#elif __MINGW_MSC_PREREQ(14, 0)
-#define __MINGW_ATTRIB_MALLOC __declspec(noalias) __declspec(restrict)
-#define __MINGW_ATTRIB_PURE
-#else
-#define __MINGW_ATTRIB_MALLOC
-#define __MINGW_ATTRIB_PURE
-#endif
-
-/* Attribute `nonnull' was valid as of gcc 3.3.  We don't use GCC's
-   variadiac macro facility, because variadic macros cause syntax
-   errors with  --traditional-cpp.  */
-#if  __MINGW_GNUC_PREREQ (3, 3)
-#define __MINGW_ATTRIB_NONNULL(arg) __attribute__ ((__nonnull__ (arg)))
-#else
-#define __MINGW_ATTRIB_NONNULL(arg)
-#endif /* GNUC >= 3.3 */
-
-#ifdef __GNUC__
-#define __MINGW_ATTRIB_UNUSED __attribute__ ((__unused__))
-#else
-#define __MINGW_ATTRIB_UNUSED
-#endif /* ATTRIBUTE_UNUSED */
-
-#if  __MINGW_GNUC_PREREQ (3, 1)
-#define __MINGW_ATTRIB_USED __attribute__ ((__used__))
-#define __MINGW_ATTRIB_DEPRECATED __attribute__ ((__deprecated__))
-#elif __MINGW_MSC_PREREQ(12, 0)
-#define __MINGW_ATTRIB_USED
-#define __MINGW_ATTRIB_DEPRECATED __declspec(deprecated)
-#else
-#define __MINGW_ATTRIB_USED __MINGW_ATTRIB_UNUSED
-#define __MINGW_ATTRIB_DEPRECATED
-#endif /* GNUC >= 3.1 */
-
-#if  __MINGW_GNUC_PREREQ (3, 3)
-#define __MINGW_NOTHROW __attribute__ ((__nothrow__))
-#elif __MINGW_MSC_PREREQ(12, 0) && defined (__cplusplus)
-#define __MINGW_NOTHROW __declspec(nothrow)
-#else
-#define __MINGW_NOTHROW
-#endif
-
-#if __MINGW_GNUC_PREREQ (4, 4)
-#define __MINGW_ATTRIB_NO_OPTIMIZE __attribute__((__optimize__ ("0")))
-#else
-#define __MINGW_ATTRIB_NO_OPTIMIZE
-#endif
-
-#if __MINGW_GNUC_PREREQ (4, 4)
-#define __MINGW_PRAGMA_PARAM(x) _Pragma (#x)
-#elif __MINGW_MSC_PREREQ (13, 1)
-#define __MINGW_PRAGMA_PARAM(x) __pragma (x)
-#else
-#define __MINGW_PRAGMA_PARAM(x)
-#endif
-
-#define __MINGW_BROKEN_INTERFACE(x) \
-  __MINGW_PRAGMA_PARAM(message ("Interface " _CRT_STRINGIZE(x) \
-  " has unverified layout."))
-
-#ifndef __MSVCRT_VERSION__
-/*  High byte is the major version, low byte is the minor. */
-# define __MSVCRT_VERSION__ 0x0700
-#endif
-
-
-#ifndef WINVER
-#define WINVER 0x0502
-#endif
-
-#ifndef _WIN32_WINNT
-#define _WIN32_WINNT 0x502
-#endif
-
-#ifndef _INT128_DEFINED
-#define _INT128_DEFINED
-#ifdef __GNUC__
-#define __int8 char
-#define __int16 short
-#define __int32 int
-#define __int64 long long
-#ifdef _WIN64
-#if (__clang_major__ > 3 || (__clang_major__ == 3 && __clang_minor__ >= 1)) && \
-    !defined(__SIZEOF_INT128__) /* clang >= 3.1 has __int128 but no size macro */
-#define __SIZEOF_INT128__ 16
-#endif
-#ifndef __SIZEOF_INT128__
-typedef int __int128 __attribute__ ((__mode__ (TI)));
-#endif
-#endif
-#endif /* __GNUC__ */
-#endif /* _INT128_DEFINED */
-
-#ifdef __GNUC__
-#define __ptr32
-#define __ptr64
-#ifndef __unaligned
-#define __unaligned
-#endif
-#ifndef __w64
-#define __w64
-#endif
-#ifdef __cplusplus
-#define __forceinline inline __attribute__((__always_inline__))
-#else
-#define __forceinline extern __inline__ __attribute__((__always_inline__,__gnu_inline__))
-#endif /* __cplusplus */
-#endif /* __GNUC__ */
-
-#if !defined(_WIN32) && !defined(__CYGWIN__)
-#error Only Win32 target is supported!
-#endif
-
-#ifndef __nothrow
-#ifdef __cplusplus
-#define __nothrow __declspec(nothrow)
-#else
-#define __nothrow
-#endif
-#endif /* __nothrow */
-
-#undef _CRT_PACKING
-#define _CRT_PACKING 8
-
-#include <vadefs.h>	/* other headers depend on this include */
-
-#ifndef __WIDL__
-#pragma pack(push,_CRT_PACKING)
-#endif
-
-#ifndef _CRT_STRINGIZE
-#define __CRT_STRINGIZE(_Value) #_Value
-#define _CRT_STRINGIZE(_Value) __CRT_STRINGIZE(_Value)
-#endif /* _CRT_STRINGIZE */
-
-#ifndef _CRT_WIDE
-#define __CRT_WIDE(_String) L ## _String
-#define _CRT_WIDE(_String) __CRT_WIDE(_String)
-#endif /* _CRT_WIDE */
-
-#ifndef _W64
-#define _W64
-#endif
-
-#ifndef _CRTIMP_NOIA64
-#ifdef __ia64__
-#define _CRTIMP_NOIA64
-#else
-#define _CRTIMP_NOIA64 _CRTIMP
-#endif
-#endif /* _CRTIMP_NOIA64 */
-
-#ifndef _CRTIMP2
-#define _CRTIMP2 _CRTIMP
-#endif
-
-#ifndef _CRTIMP_ALTERNATIVE
-#define _CRTIMP_ALTERNATIVE _CRTIMP
-#define _CRT_ALTERNATIVE_IMPORTED
-#endif /* _CRTIMP_ALTERNATIVE */
-
-#ifndef _MRTIMP2
-#define _MRTIMP2  _CRTIMP
-#endif
-
-/* We have to define _DLL for gcc based mingw version. This define is set
-   by VC, when DLL-based runtime is used. So, gcc based runtime just have
-   DLL-base runtime, therefore this define has to be set.
-   As our headers are possibly used by windows compiler having a static
-   C-runtime, we make this definition gnu compiler specific here.  */
-#if !defined (_DLL) && defined (__GNUC__)
-#define _DLL
-#endif
-
-#ifndef _MT
-#define _MT
-#endif
-
-#ifndef _MCRTIMP
-#define _MCRTIMP _CRTIMP
-#endif
-
-#ifndef _CRTIMP_PURE
-#define _CRTIMP_PURE _CRTIMP
-#endif
-
-#ifndef _PGLOBAL
-#define _PGLOBAL
-#endif
-
-#ifndef _AGLOBAL
-#define _AGLOBAL
-#endif
-
-#define _SECURECRT_FILL_BUFFER_PATTERN 0xFD
-#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated)
-
-#ifndef _CRT_INSECURE_DEPRECATE_MEMORY
-#define _CRT_INSECURE_DEPRECATE_MEMORY(_Replacement)
-#endif
-
-#ifndef _CRT_INSECURE_DEPRECATE_GLOBALS
-#define _CRT_INSECURE_DEPRECATE_GLOBALS(_Replacement)
-#endif
-
-#ifndef _CRT_MANAGED_HEAP_DEPRECATE
-#define _CRT_MANAGED_HEAP_DEPRECATE
-#endif
-
-#ifndef _CRT_OBSOLETE
-#define _CRT_OBSOLETE(_NewItem)
-#endif
-
-#ifndef __WIDL__
-
-#ifndef _SIZE_T_DEFINED
-#define _SIZE_T_DEFINED
-#undef size_t
-#ifdef _WIN64
-__MINGW_EXTENSION typedef unsigned __int64 size_t;
-#else
-typedef unsigned int size_t;
-#endif /* _WIN64 */
-#endif /* _SIZE_T_DEFINED */
-
-#ifndef _SSIZE_T_DEFINED
-#define _SSIZE_T_DEFINED
-#undef ssize_t
-#ifdef _WIN64
-__MINGW_EXTENSION typedef __int64 ssize_t;
-#else
-typedef int ssize_t;
-#endif /* _WIN64 */
-#endif /* _SSIZE_T_DEFINED */
-
-#ifndef _INTPTR_T_DEFINED
-#define _INTPTR_T_DEFINED
-#ifndef __intptr_t_defined
-#define __intptr_t_defined
-#undef intptr_t
-#ifdef _WIN64
-__MINGW_EXTENSION typedef __int64 intptr_t;
-#else
-typedef int intptr_t;
-#endif /* _WIN64 */
-#endif /* __intptr_t_defined */
-#endif /* _INTPTR_T_DEFINED */
-
-#ifndef _UINTPTR_T_DEFINED
-#define _UINTPTR_T_DEFINED
-#ifndef __uintptr_t_defined
-#define __uintptr_t_defined
-#undef uintptr_t
-#ifdef _WIN64
-__MINGW_EXTENSION typedef unsigned __int64 uintptr_t;
-#else
-typedef unsigned int uintptr_t;
-#endif /* _WIN64 */
-#endif /* __uintptr_t_defined */
-#endif /* _UINTPTR_T_DEFINED */
-
-#ifndef _PTRDIFF_T_DEFINED
-#define _PTRDIFF_T_DEFINED
-#ifndef _PTRDIFF_T_
-#define _PTRDIFF_T_
-#undef ptrdiff_t
-#ifdef _WIN64
-__MINGW_EXTENSION typedef __int64 ptrdiff_t;
-#else
-typedef int ptrdiff_t;
-#endif /* _WIN64 */
-#endif /* _PTRDIFF_T_ */
-#endif /* _PTRDIFF_T_DEFINED */
-
-#ifndef _WCHAR_T_DEFINED
-#define _WCHAR_T_DEFINED
-#if !defined(__cplusplus) && !defined(__WIDL__)
-typedef unsigned short wchar_t;
-#endif /* C++ */
-#endif /* _WCHAR_T_DEFINED */
-
-#ifndef _WCTYPE_T_DEFINED
-#define _WCTYPE_T_DEFINED
-#ifndef _WINT_T
-#define _WINT_T
-typedef unsigned short wint_t;
-typedef unsigned short wctype_t;
-#endif /* _WINT_T */
-#endif /* _WCTYPE_T_DEFINED */
-
-#if defined (_WIN32) && !defined (_WIN64) && !defined (__MINGW_USE_VC2005_COMPAT)
-#ifndef _USE_32BIT_TIME_T
-#define _USE_32BIT_TIME_T
-#endif
-#endif
-
-#ifdef _USE_32BIT_TIME_T
-#ifdef _WIN64
-#error You cannot use 32-bit time_t (_USE_32BIT_TIME_T) with _WIN64
-#undef _USE_32BIT_TIME_T
-#endif
-#endif /* _USE_32BIT_TIME_T */
-
-#ifndef _ERRCODE_DEFINED
-#define _ERRCODE_DEFINED
-typedef int errno_t;
-#endif
-
-#ifndef _TIME32_T_DEFINED
-#define _TIME32_T_DEFINED
-typedef long __time32_t;
-#endif
-
-#ifndef _TIME64_T_DEFINED
-#define _TIME64_T_DEFINED
-__MINGW_EXTENSION typedef __int64 __time64_t;
-#endif /* _TIME64_T_DEFINED */
-
-#ifndef _TIME_T_DEFINED
-#define _TIME_T_DEFINED
-#ifdef _USE_32BIT_TIME_T
-typedef __time32_t time_t;
-#else
-typedef __time64_t time_t;
-#endif
-#endif /* _TIME_T_DEFINED */
-
-#ifndef _CONST_RETURN
-#define _CONST_RETURN
-#endif
-
-#ifndef UNALIGNED
-#if defined(_M_IA64) || defined(_M_AMD64)
-#define UNALIGNED __unaligned
-#else
-#define UNALIGNED
-#endif
-#endif /* UNALIGNED */
-
-#ifndef _CRT_ALIGN
-#ifdef  _MSC_VER
-#define _CRT_ALIGN(x) __declspec(align(x))
-#else /* __GNUC__ */
-#define _CRT_ALIGN(x) __attribute__ ((__aligned__ (x)))
-#endif
-#endif /* _CRT_ALIGN */
-
-#endif /* __WIDL__ */
-
-#ifndef __CRTDECL
-#define __CRTDECL __cdecl
-#endif
-
-#define _ARGMAX 100
-
-#ifndef _TRUNCATE
-#define _TRUNCATE ((size_t)-1)
-#endif
-
-#ifndef _CRT_UNUSED
-#define _CRT_UNUSED(x) (void)x
-#endif
-
-/* MSVC defines _NATIVE_NULLPTR_SUPPORTED when nullptr is supported. We emulate it here for GCC. */
-#if __MINGW_GNUC_PREREQ(4, 6)
-#if defined(__GNUC__) && (defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L)
-#define _NATIVE_NULLPTR_SUPPORTED
-#endif
-#endif
-
-/* We are activating __USE_MINGW_ANSI_STDIO for various define indicators.
-   Note that we enable it also for _GNU_SOURCE in C++, but not for C case. */
-#if (defined (_POSIX) || defined (_POSIX_SOURCE) || defined (_POSIX_C_SOURCE) \
-     || defined (_ISOC99_SOURCE) \
-     || defined (_XOPEN_SOURCE) || defined (_XOPEN_SOURCE_EXTENDED) \
-     || (defined (_GNU_SOURCE) && defined (__cplusplus)) \
-     || defined (_SVID_SOURCE)) \
-    && !defined(__USE_MINGW_ANSI_STDIO)
-/* Enable __USE_MINGW_ANSI_STDIO if _POSIX defined
- * and If user did _not_ specify it explicitly... */
-#  define __USE_MINGW_ANSI_STDIO			1
-#endif
-
-/* _dowildcard is an int that controls the globbing of the command line.
- * The MinGW32 (mingw.org) runtime calls it _CRT_glob, so we are adding
- * a compatibility definition here:  you can use either of _CRT_glob or
- * _dowildcard .
- * If _dowildcard is non-zero, the command line will be globbed:  *.*
- * will be expanded to be all files in the startup directory.
- * In the mingw-w64 library a _dowildcard variable is defined as being
- * 0, therefore command line globbing is DISABLED by default. To turn it
- * on and to leave wildcard command line processing MS's globbing code,
- * include a line in one of your source modules defining _dowildcard and
- * setting it to -1, like so:
- * int _dowildcard = -1;
- */
-#undef  _CRT_glob
-#define _CRT_glob _dowildcard
-
-
-#if defined(_MSC_VER) && !defined(_MSC_EXTENSIONS)
-#define NONAMELESSUNION		1
-#endif
-#if defined(NONAMELESSSTRUCT) && \
-   !defined(NONAMELESSUNION)
-#define NONAMELESSUNION		1
-#endif
-#if defined(NONAMELESSUNION)  && \
-   !defined(NONAMELESSSTRUCT)
-#define NONAMELESSSTRUCT	1
-#endif
-
-#ifndef __ANONYMOUS_DEFINED
-#define __ANONYMOUS_DEFINED
-#define _ANONYMOUS_UNION  __MINGW_EXTENSION
-#define _ANONYMOUS_STRUCT __MINGW_EXTENSION
-#ifndef NONAMELESSUNION
-#define _UNION_NAME(x)
-#define _STRUCT_NAME(x)
-#else /* NONAMELESSUNION */
-#define _UNION_NAME(x)  x
-#define _STRUCT_NAME(x) x
-#endif
-#endif	/* __ANONYMOUS_DEFINED */
-
-#ifndef DUMMYUNIONNAME
-# ifdef NONAMELESSUNION
-#  define DUMMYUNIONNAME  u
-#  define DUMMYUNIONNAME1 u1	/* Wine uses this variant */
-#  define DUMMYUNIONNAME2 u2
-#  define DUMMYUNIONNAME3 u3
-#  define DUMMYUNIONNAME4 u4
-#  define DUMMYUNIONNAME5 u5
-#  define DUMMYUNIONNAME6 u6
-#  define DUMMYUNIONNAME7 u7
-#  define DUMMYUNIONNAME8 u8
-#  define DUMMYUNIONNAME9 u9
-# else /* NONAMELESSUNION */
-#  define DUMMYUNIONNAME
-#  define DUMMYUNIONNAME1	/* Wine uses this variant */
-#  define DUMMYUNIONNAME2
-#  define DUMMYUNIONNAME3
-#  define DUMMYUNIONNAME4
-#  define DUMMYUNIONNAME5
-#  define DUMMYUNIONNAME6
-#  define DUMMYUNIONNAME7
-#  define DUMMYUNIONNAME8
-#  define DUMMYUNIONNAME9
-# endif
-#endif	/* DUMMYUNIONNAME */
-
-#ifndef DUMMYSTRUCTNAME
-# ifdef NONAMELESSUNION
-#  define DUMMYSTRUCTNAME  s
-#  define DUMMYSTRUCTNAME1 s1	/* Wine uses this variant */
-#  define DUMMYSTRUCTNAME2 s2
-#  define DUMMYSTRUCTNAME3 s3
-#  define DUMMYSTRUCTNAME4 s4
-#  define DUMMYSTRUCTNAME5 s5
-# else
-#  define DUMMYSTRUCTNAME
-#  define DUMMYSTRUCTNAME1	/* Wine uses this variant */
-#  define DUMMYSTRUCTNAME2
-#  define DUMMYSTRUCTNAME3
-#  define DUMMYSTRUCTNAME4
-#  define DUMMYSTRUCTNAME5
-# endif
-#endif /* DUMMYSTRUCTNAME */
-
-
-/* Macros for __uuidof template-based emulation */
-#if defined(__cplusplus) && (USE___UUIDOF == 0)
-
-#define __CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)           \
-    extern "C++" {                                                      \
-    template<> inline const GUID &__mingw_uuidof<type>() {              \
-        static const IID __uuid_inst = {l,w1,w2, {b1,b2,b3,b4,b5,b6,b7,b8}}; \
-        return __uuid_inst;                                             \
-    }                                                                   \
-    template<> inline const GUID &__mingw_uuidof<type*>() {             \
-        return __mingw_uuidof<type>();                                  \
-    }                                                                   \
-    }
-
-#define __uuidof(type) __mingw_uuidof<__typeof(type)>()
-
-#else
-
-#define __CRT_UUID_DECL(type,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)
-
-#endif
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#ifdef __MINGW_INTRIN_INLINE
-#if !defined (__clang__)
-void __cdecl __debugbreak(void);
-__MINGW_INTRIN_INLINE void __cdecl __debugbreak(void)
-{
-  __asm__ __volatile__("int {$}3":);
-}
-#endif
-#endif
-
-/* mingw-w64 specific functions: */
-const char *__mingw_get_crt_info (void);
-
-#ifdef __cplusplus
-}
-#endif
-
-#ifndef __WIDL__
-#pragma pack(pop)
-#endif
-
-#endif /* _INC__MINGW_H */
-
-#ifndef MINGW_SDK_INIT
-#define MINGW_SDK_INIT
-
-#ifdef MINGW_HAS_SECURE_API
-#define __STDC_SECURE_LIB__ 200411L
-#define __GOT_SECURE_LIB__ __STDC_SECURE_LIB__
-#endif
-
-#ifndef __WIDL__
-#include "sdks/_mingw_directx.h"
-#include "sdks/_mingw_ddk.h"
-#endif
-
-#endif /* MINGW_SDK_INIT */
diff -Nru orig/affxparser/src/_mingw_preR42.h patched/affxparser/src/_mingw_preR42.h
--- orig/affxparser/src/_mingw_preR42.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/_mingw_preR42.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,22 +0,0 @@
-/*****************************************************************
- This header file is used when compiling with MinGW on Windows.
- It is agile to the gcc toolchain currently used; it uses
- different setups for:
-
-  - gcc (>= 4.9.3): introduced in R (>= 3.3.0)
-  - gcc (>= 4.6.3): R (< 3.3.0) and some R (>= 3.3.0) installs
-
- Henrik Bengtsson, 2016-04-05
-*****************************************************************/
-#define GCC_VERSION (__GNUC__ * 10000 \
-                              + __GNUC_MINOR__ * 100 \
-                              + __GNUC_PATCHLEVEL__)
-
-#if GCC_VERSION >= 40903
-#include "_mingw_gcc493.h"
-#elif GCC_VERSION >= 40603
-#include "_mingw_gcc463.h"
-#else
-/* Fall back assuming gcc 4.6.3 toolchain */
-#include "_mingw_gcc463.h"
-#endif
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/CDFData.h patched/affxparser/src/fusion/calvin_files/data/src/CDFData.h
--- orig/affxparser/src/fusion/calvin_files/data/src/CDFData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/CDFData.h	2024-03-12 11:45:46.081649400 +0100
@@ -35,7 +35,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/CDFProbeGroupInformation.h patched/affxparser/src/fusion/calvin_files/data/src/CDFProbeGroupInformation.h
--- orig/affxparser/src/fusion/calvin_files/data/src/CDFProbeGroupInformation.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/CDFProbeGroupInformation.h	2024-03-12 11:45:46.191080100 +0100
@@ -24,7 +24,7 @@
 /*! \file CDFProbeGroupInformation.h This file defines the CDFProbeGroupInformation class.
  */
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include <windows.h>
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/CDFProbeInformation.h patched/affxparser/src/fusion/calvin_files/data/src/CDFProbeInformation.h
--- orig/affxparser/src/fusion/calvin_files/data/src/CDFProbeInformation.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/CDFProbeInformation.h	2024-03-12 11:45:46.269146300 +0100
@@ -23,7 +23,7 @@
 
 /*! \file CDFProbeInformation.h This file defines the CDFProbeInformation class.
  */
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include <windows.h>
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/CDFProbeSetInformation.h patched/affxparser/src/fusion/calvin_files/data/src/CDFProbeSetInformation.h
--- orig/affxparser/src/fusion/calvin_files/data/src/CDFProbeSetInformation.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/CDFProbeSetInformation.h	2024-03-12 11:45:46.347283500 +0100
@@ -24,7 +24,7 @@
 /*! \file CDFProbeSetInformation.h This file defines the CDFProbeSetInformation class.
  */
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include <windows.h>
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/CDFQCProbeSetInformation.h patched/affxparser/src/fusion/calvin_files/data/src/CDFQCProbeSetInformation.h
--- orig/affxparser/src/fusion/calvin_files/data/src/CDFQCProbeSetInformation.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/CDFQCProbeSetInformation.h	2024-03-12 11:45:46.503549300 +0100
@@ -21,7 +21,7 @@
 #ifndef _CDFQCProbeSetInformation_HEADER_
 #define _CDFQCProbeSetInformation_HEADER_
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include <windows.h>
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/CELData.h patched/affxparser/src/fusion/calvin_files/data/src/CELData.h
--- orig/affxparser/src/fusion/calvin_files/data/src/CELData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/CELData.h	2024-03-12 11:45:46.581648900 +0100
@@ -33,7 +33,7 @@
 //
 
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/CHPBackgroundZone.h patched/affxparser/src/fusion/calvin_files/data/src/CHPBackgroundZone.h
--- orig/affxparser/src/fusion/calvin_files/data/src/CHPBackgroundZone.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/CHPBackgroundZone.h	2024-03-12 11:45:46.675345800 +0100
@@ -28,7 +28,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/CHPGenotypeEntry.h patched/affxparser/src/fusion/calvin_files/data/src/CHPGenotypeEntry.h
--- orig/affxparser/src/fusion/calvin_files/data/src/CHPGenotypeEntry.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/CHPGenotypeEntry.h	2024-03-12 11:45:46.909713800 +0100
@@ -26,7 +26,7 @@
 #include <vector>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/CHPUniversalEntry.h patched/affxparser/src/fusion/calvin_files/data/src/CHPUniversalEntry.h
--- orig/affxparser/src/fusion/calvin_files/data/src/CHPUniversalEntry.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/CHPUniversalEntry.h	2024-03-12 11:45:47.379020800 +0100
@@ -26,7 +26,7 @@
 #include <vector>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/ColumnInfo.h patched/affxparser/src/fusion/calvin_files/data/src/ColumnInfo.h
--- orig/affxparser/src/fusion/calvin_files/data/src/ColumnInfo.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/ColumnInfo.h	2024-03-12 11:45:47.534908000 +0100
@@ -32,7 +32,7 @@
 #include <vector>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/DATData.h patched/affxparser/src/fusion/calvin_files/data/src/DATData.h
--- orig/affxparser/src/fusion/calvin_files/data/src/DATData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/DATData.h	2024-03-12 11:45:48.034873800 +0100
@@ -31,7 +31,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/DataGroup.cpp patched/affxparser/src/fusion/calvin_files/data/src/DataGroup.cpp
--- orig/affxparser/src/fusion/calvin_files/data/src/DataGroup.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/DataGroup.cpp	2024-03-12 11:45:47.687708300 +0100
@@ -25,7 +25,7 @@
 
 using namespace affymetrix_calvin_io;
 
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <sys/mman.h>
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/DataGroup.h patched/affxparser/src/fusion/calvin_files/data/src/DataGroup.h
--- orig/affxparser/src/fusion/calvin_files/data/src/DataGroup.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/DataGroup.h	2024-03-12 11:45:47.722466400 +0100
@@ -24,7 +24,7 @@
 /*! \file DataGroup.h This file provides access to the DataSets in a DataGroup.
  */
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include <windows.h>
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/DataGroupHeader.h patched/affxparser/src/fusion/calvin_files/data/src/DataGroupHeader.h
--- orig/affxparser/src/fusion/calvin_files/data/src/DataGroupHeader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/DataGroupHeader.h	2024-03-12 11:45:47.798963700 +0100
@@ -28,7 +28,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/DataSet.cpp patched/affxparser/src/fusion/calvin_files/data/src/DataSet.cpp
--- orig/affxparser/src/fusion/calvin_files/data/src/DataSet.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/DataSet.cpp	2024-03-12 11:45:47.830706100 +0100
@@ -31,7 +31,7 @@
 
 using namespace affymetrix_calvin_io;
 
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <unistd.h>
 #include <sys/mman.h>
 
@@ -61,7 +61,7 @@
 	data = 0;
 	isOpen = false;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	fileMapHandle = handle;
 #else
 	fp = 0;
@@ -85,7 +85,7 @@
 	data = 0;
 	isOpen = false;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	fileMapHandle = 0;
 #else
 	fp = 0;
@@ -137,7 +137,7 @@
  */
 bool DataSet::OpenMM()
 {
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	if (MapDataWin32(header.GetDataStartFilePos(), header.GetDataSize()) == false)
 		return false;
 #else
@@ -182,7 +182,7 @@
 		ClearStreamData();
 }
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 std::string GetErrorMsg()
 {
@@ -293,7 +293,7 @@
  */
 void DataSet::UnmapFile()
 {
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	// Unmap the view
 	if (mappedData != 0 )
@@ -387,7 +387,7 @@
 	// Byte offset in data set + byte offset of data set in file
 	u_int32_t startByte = BytesPerRow()*rowStart + columnByteOffsets[col] + header.GetDataStartFilePos();
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	if (useMemoryMapping)
 	{
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/DataSet.h patched/affxparser/src/fusion/calvin_files/data/src/DataSet.h
--- orig/affxparser/src/fusion/calvin_files/data/src/DataSet.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/DataSet.h	2024-03-12 11:45:47.878643300 +0100
@@ -21,7 +21,7 @@
 #ifndef _DataSet_HEADER_
 #define _DataSet_HEADER_
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include <windows.h>
 #endif
 
@@ -277,7 +277,7 @@
 	int32_t LastRowMapped();
 
 	/*! Platform specific memory-mapping method */
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	bool MapDataWin32(u_int32_t start, u_int32_t bytes);
 
@@ -346,7 +346,7 @@
 	 */
 	Int32Vector columnByteOffsets;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	/*! Handle returned by CreateFileMapping */
 	HANDLE fileMapHandle;
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/DataSetHeader.h patched/affxparser/src/fusion/calvin_files/data/src/DataSetHeader.h
--- orig/affxparser/src/fusion/calvin_files/data/src/DataSetHeader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/DataSetHeader.h	2024-03-12 11:45:47.956337300 +0100
@@ -34,7 +34,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/FileHeader.h patched/affxparser/src/fusion/calvin_files/data/src/FileHeader.h
--- orig/affxparser/src/fusion/calvin_files/data/src/FileHeader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/FileHeader.h	2024-03-12 11:45:48.159730700 +0100
@@ -34,7 +34,7 @@
 #include <vector>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/GenericData.cpp patched/affxparser/src/fusion/calvin_files/data/src/GenericData.cpp
--- orig/affxparser/src/fusion/calvin_files/data/src/GenericData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/GenericData.cpp	2024-03-12 11:45:48.206615600 +0100
@@ -39,7 +39,7 @@
  */
 GenericData::GenericData()
 {
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	fileMapHandle = NULL;
 	fileHandle = INVALID_HANDLE_VALUE;
 #endif
@@ -268,7 +268,7 @@
 DataSet* GenericData::CreateDataSet(DataSetHeader* dsh)
 {
 	void* handle = 0;
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	handle = fileMapHandle;
 #endif
 	ReadFullDataSetHeader(dsh);
@@ -316,7 +316,7 @@
 		fs.close();
 
 	void* handle = 0;
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	handle = fileMapHandle;
 #endif
 
@@ -473,7 +473,7 @@
  */
 bool GenericData::MapFile()
 {
-#ifdef _MSC_VER	// On Windows the map is open in the GenericData object, otherwise it is opened in the DataSet
+#ifdef FUSION_MSC_VER	// On Windows the map is open in the GenericData object, otherwise it is opened in the DataSet
 	if (fileHandle == INVALID_HANDLE_VALUE)
 	{
           // Create the file.
@@ -506,7 +506,7 @@
  */
 void GenericData::UnmapFile()
 {
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	if (fileHandle != INVALID_HANDLE_VALUE)
 	{
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/GenericData.h patched/affxparser/src/fusion/calvin_files/data/src/GenericData.h
--- orig/affxparser/src/fusion/calvin_files/data/src/GenericData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/GenericData.h	2024-03-12 11:45:48.237853500 +0100
@@ -24,7 +24,7 @@
 /*! \file GenericData.h This file provides access to generic data.
  */
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include <windows.h>
 #endif
 
@@ -235,7 +235,7 @@
 	/*! The header and generic header objects */
 	affymetrix_calvin_io::FileHeader header;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	/*! Handle returned by CreateFileMapping */
 	HANDLE fileMapHandle;
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/GenericDataHeader.h patched/affxparser/src/fusion/calvin_files/data/src/GenericDataHeader.h
--- orig/affxparser/src/fusion/calvin_files/data/src/GenericDataHeader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/GenericDataHeader.h	2024-03-12 11:45:48.316008100 +0100
@@ -32,7 +32,7 @@
 #include <map>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/data/src/MemMapFile.h patched/affxparser/src/fusion/calvin_files/data/src/MemMapFile.h
--- orig/affxparser/src/fusion/calvin_files/data/src/MemMapFile.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/data/src/MemMapFile.h	2024-03-12 11:45:48.472275000 +0100
@@ -25,7 +25,7 @@
  *	file access methods.
  */
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include <windows.h>
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/exception/src/ExceptionBase.h patched/affxparser/src/fusion/calvin_files/exception/src/ExceptionBase.h
--- orig/affxparser/src/fusion/calvin_files/exception/src/ExceptionBase.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/exception/src/ExceptionBase.h	2024-03-12 11:45:48.817615200 +0100
@@ -37,7 +37,7 @@
 	class CalvinException
 	{
 		protected:
-			/*! Source in the _MSC_VER use case is used for registry lookup to determine the resource file. 
+			/*! Source in the FUSION_MSC_VER use case is used for registry lookup to determine the resource file. 
 				The message code is used incojuction with source to lookup the specific message string based on code.
 			*/
 			std::wstring sourceName;
diff -Nru orig/affxparser/src/fusion/calvin_files/fusion/src/FusionProbeSetResults.h patched/affxparser/src/fusion/calvin_files/fusion/src/FusionProbeSetResults.h
--- orig/affxparser/src/fusion/calvin_files/fusion/src/FusionProbeSetResults.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/fusion/src/FusionProbeSetResults.h	2024-03-12 11:45:50.650233800 +0100
@@ -24,7 +24,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4786) // identifier was truncated in the debug information
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parameter/src/Parameter.h patched/affxparser/src/fusion/calvin_files/parameter/src/Parameter.h
--- orig/affxparser/src/fusion/calvin_files/parameter/src/Parameter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parameter/src/Parameter.h	2024-03-12 11:45:51.097251900 +0100
@@ -33,7 +33,7 @@
 #include <vector>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parameter/src/ParameterNameValueType.cpp patched/affxparser/src/fusion/calvin_files/parameter/src/ParameterNameValueType.cpp
--- orig/affxparser/src/fusion/calvin_files/parameter/src/ParameterNameValueType.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parameter/src/ParameterNameValueType.cpp	2024-03-12 11:45:51.284908400 +0100
@@ -17,7 +17,7 @@
 //
 ////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include "windows.h"
 #endif
 
@@ -30,7 +30,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #else
 #include <sys/types.h>
diff -Nru orig/affxparser/src/fusion/calvin_files/parameter/src/ParameterNameValueType.h patched/affxparser/src/fusion/calvin_files/parameter/src/ParameterNameValueType.h
--- orig/affxparser/src/fusion/calvin_files/parameter/src/ParameterNameValueType.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parameter/src/ParameterNameValueType.h	2024-03-12 11:45:51.331617600 +0100
@@ -33,7 +33,7 @@
 #include <vector>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/CDFFileReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/CDFFileReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/CDFFileReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/CDFFileReader.h	2024-03-12 11:45:51.581585900 +0100
@@ -33,7 +33,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/CHPFileReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/CHPFileReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/CHPFileReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/CHPFileReader.h	2024-03-12 11:45:51.753459700 +0100
@@ -33,7 +33,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/CelFileReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/CelFileReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/CelFileReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/CelFileReader.h	2024-03-12 11:45:51.659708400 +0100
@@ -34,7 +34,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/DATFileReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/DATFileReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/DATFileReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/DATFileReader.h	2024-03-12 11:45:52.440941600 +0100
@@ -33,7 +33,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/DataGroupHeaderReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/DataGroupHeaderReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/DataGroupHeaderReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/DataGroupHeaderReader.h	2024-03-12 11:45:52.137203700 +0100
@@ -34,7 +34,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/DataGroupReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/DataGroupReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/DataGroupReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/DataGroupReader.h	2024-03-12 11:45:52.200741700 +0100
@@ -30,7 +30,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/DataSetHeaderReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/DataSetHeaderReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/DataSetHeaderReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/DataSetHeaderReader.h	2024-03-12 11:45:52.284914400 +0100
@@ -34,7 +34,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/DataSetReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/DataSetReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/DataSetReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/DataSetReader.h	2024-03-12 11:45:52.358542500 +0100
@@ -29,7 +29,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/FileHeaderReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/FileHeaderReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/FileHeaderReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/FileHeaderReader.h	2024-03-12 11:45:52.597547000 +0100
@@ -34,7 +34,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/FileInput.cpp patched/affxparser/src/fusion/calvin_files/parsers/src/FileInput.cpp
--- orig/affxparser/src/fusion/calvin_files/parsers/src/FileInput.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/FileInput.cpp	2024-03-12 11:45:52.628763400 +0100
@@ -17,7 +17,7 @@
 //
 ////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include "windows.h"
 #endif
 
@@ -30,7 +30,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996)
 #else
 #include <sys/types.h>
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/GenericDataHeaderReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/GenericDataHeaderReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/GenericDataHeaderReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/GenericDataHeaderReader.h	2024-03-12 11:45:52.757652600 +0100
@@ -29,7 +29,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/GenericFileReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/GenericFileReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/GenericFileReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/GenericFileReader.h	2024-03-12 11:45:52.836081300 +0100
@@ -35,7 +35,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/GridControlFileReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/GridControlFileReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/GridControlFileReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/GridControlFileReader.h	2024-03-12 11:45:52.909943300 +0100
@@ -36,7 +36,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/SAXArrayHandlers.cpp patched/affxparser/src/fusion/calvin_files/parsers/src/SAXArrayHandlers.cpp
--- orig/affxparser/src/fusion/calvin_files/parsers/src/SAXArrayHandlers.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/SAXArrayHandlers.cpp	2024-03-12 11:45:53.025706200 +0100
@@ -34,7 +34,7 @@
 using namespace std;
 XERCES_CPP_NAMESPACE_USE;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/SAXParameterFileHandlers.cpp patched/affxparser/src/fusion/calvin_files/parsers/src/SAXParameterFileHandlers.cpp
--- orig/affxparser/src/fusion/calvin_files/parsers/src/SAXParameterFileHandlers.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/SAXParameterFileHandlers.cpp	2024-03-12 11:45:53.104974500 +0100
@@ -33,7 +33,7 @@
 using namespace std;
 XERCES_CPP_NAMESPACE_USE;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/SAXTemplateHandlers.cpp patched/affxparser/src/fusion/calvin_files/parsers/src/SAXTemplateHandlers.cpp
--- orig/affxparser/src/fusion/calvin_files/parsers/src/SAXTemplateHandlers.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/SAXTemplateHandlers.cpp	2024-03-12 11:45:53.191109000 +0100
@@ -34,7 +34,7 @@
 using namespace std;
 XERCES_CPP_NAMESPACE_USE;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/parsers/src/TextFileReader.h patched/affxparser/src/fusion/calvin_files/parsers/src/TextFileReader.h
--- orig/affxparser/src/fusion/calvin_files/parsers/src/TextFileReader.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/parsers/src/TextFileReader.h	2024-03-12 11:45:53.379050300 +0100
@@ -32,7 +32,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/utils/src/AffymetrixGuid.cpp patched/affxparser/src/fusion/calvin_files/utils/src/AffymetrixGuid.cpp
--- orig/affxparser/src/fusion/calvin_files/utils/src/AffymetrixGuid.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/utils/src/AffymetrixGuid.cpp	2024-03-12 11:45:53.578883800 +0100
@@ -17,7 +17,7 @@
 //
 ////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include "windows.h"
 #endif
 
@@ -35,13 +35,13 @@
 #include <stdio.h>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // ignore deprecated functions warning
 #include <process.h>
 #define getpid _getpid
 #endif
 
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <unistd.h>
 #endif
 
@@ -68,7 +68,7 @@
  */
 AffymetrixGuid::AffymetrixGuid()
 {
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	// initialize Winsock library
 	WSADATA wsaData;
 	WORD wVersionRequested = MAKEWORD(1, 1);
@@ -82,7 +82,7 @@
  */
 AffymetrixGuid::~AffymetrixGuid()
 {
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	WSACleanup();
 #endif
 }
diff -Nru orig/affxparser/src/fusion/calvin_files/utils/src/DateTime.cpp patched/affxparser/src/fusion/calvin_files/utils/src/DateTime.cpp
--- orig/affxparser/src/fusion/calvin_files/utils/src/DateTime.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/utils/src/DateTime.cpp	2024-03-12 11:45:53.894249000 +0100
@@ -32,7 +32,7 @@
 #define DATE_PRINTF_FORMAT std::wstring(L"%02d-%02d-%02d")
 #define TIME_PRINTF_FORMAT std::wstring(L"%02d:%02d:%02d")
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // Turn off warnings for depricated VC++ functions.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/utils/src/FileUtils.cpp patched/affxparser/src/fusion/calvin_files/utils/src/FileUtils.cpp
--- orig/affxparser/src/fusion/calvin_files/utils/src/FileUtils.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/utils/src/FileUtils.cpp	2024-03-12 11:45:53.987886800 +0100
@@ -273,7 +273,7 @@
 	}
 	string exten = ext;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	WIN32_FIND_DATA findData;
 	string search = basePath + "*.";
@@ -345,7 +345,7 @@
 		}
 	}
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	WIN32_FIND_DATA findData;
 	string search = basePath + "*.*";
diff -Nru orig/affxparser/src/fusion/calvin_files/utils/src/StringUtils.cpp patched/affxparser/src/fusion/calvin_files/utils/src/StringUtils.cpp
--- orig/affxparser/src/fusion/calvin_files/utils/src/StringUtils.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/utils/src/StringUtils.cpp	2024-03-12 11:45:54.145085900 +0100
@@ -25,7 +25,7 @@
 #include <vector>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // ignore deprecated functions warning
 #endif
 
@@ -138,7 +138,7 @@
  */
 std::wstring StringUtils::ToString(int value, int digits, wchar_t fill)
 {
-#if defined(_GLIBCPP_USE_WCHAR_T) || defined(_GLIBCXX_USE_WCHAR_T) || defined(_MSC_VER)
+#if defined(_GLIBCPP_USE_WCHAR_T) || defined(_GLIBCXX_USE_WCHAR_T) || defined(FUSION_MSC_VER)
 	std::wostringstream str;
 	str << std::setw(digits) << std::setfill(fill) << value;
 	return str.str();
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/ArrayFileWriter.cpp patched/affxparser/src/fusion/calvin_files/writers/src/ArrayFileWriter.cpp
--- orig/affxparser/src/fusion/calvin_files/writers/src/ArrayFileWriter.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/ArrayFileWriter.cpp	2024-03-12 11:45:54.256166600 +0100
@@ -46,7 +46,7 @@
 using namespace affymetrix_calvin_utilities;
 XERCES_CPP_NAMESPACE_USE
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // ignore deprecated functions warning
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/CDFCntrlFileWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/CDFCntrlFileWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/CDFCntrlFileWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/CDFCntrlFileWriter.h	2024-03-12 11:45:55.566443400 +0100
@@ -28,7 +28,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/CDFCntrlProbeSetWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/CDFCntrlProbeSetWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/CDFCntrlProbeSetWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/CDFCntrlProbeSetWriter.h	2024-03-12 11:45:55.638476200 +0100
@@ -26,7 +26,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/CDFFileWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/CDFFileWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/CDFFileWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/CDFFileWriter.h	2024-03-12 11:45:55.722529300 +0100
@@ -26,7 +26,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/CDFProbeSetWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/CDFProbeSetWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/CDFProbeSetWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/CDFProbeSetWriter.h	2024-03-12 11:45:55.799188500 +0100
@@ -24,7 +24,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/CalvinCHPMultiDataFileBufferWriter.cpp patched/affxparser/src/fusion/calvin_files/writers/src/CalvinCHPMultiDataFileBufferWriter.cpp
--- orig/affxparser/src/fusion/calvin_files/writers/src/CalvinCHPMultiDataFileBufferWriter.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/CalvinCHPMultiDataFileBufferWriter.cpp	2024-03-12 11:45:54.733114000 +0100
@@ -23,7 +23,7 @@
  * @brief  Class for writing MultiDatas to a buffer before writing to CHP files.
  */
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #else
 #include <sys/types.h>
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/CalvinCelFileWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/CalvinCelFileWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/CalvinCelFileWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/CalvinCelFileWriter.h	2024-03-12 11:45:54.461725500 +0100
@@ -25,7 +25,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/DATFileUpdater.h patched/affxparser/src/fusion/calvin_files/writers/src/DATFileUpdater.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/DATFileUpdater.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/DATFileUpdater.h	2024-03-12 11:45:56.614740000 +0100
@@ -27,7 +27,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/DATFileWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/DATFileWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/DATFileWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/DATFileWriter.h	2024-03-12 11:45:56.691375700 +0100
@@ -25,7 +25,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/DataGroupHeaderUpdater.h patched/affxparser/src/fusion/calvin_files/writers/src/DataGroupHeaderUpdater.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/DataGroupHeaderUpdater.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/DataGroupHeaderUpdater.h	2024-03-12 11:45:56.003791300 +0100
@@ -31,7 +31,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/DataGroupHeaderWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/DataGroupHeaderWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/DataGroupHeaderWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/DataGroupHeaderWriter.h	2024-03-12 11:45:56.082331200 +0100
@@ -24,7 +24,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/DataGroupWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/DataGroupWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/DataGroupWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/DataGroupWriter.h	2024-03-12 11:45:56.159917200 +0100
@@ -25,7 +25,7 @@
 //
 
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/DataSetHeaderUpdater.h patched/affxparser/src/fusion/calvin_files/writers/src/DataSetHeaderUpdater.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/DataSetHeaderUpdater.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/DataSetHeaderUpdater.h	2024-03-12 11:45:56.300443200 +0100
@@ -30,7 +30,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/DataSetHeaderWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/DataSetHeaderWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/DataSetHeaderWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/DataSetHeaderWriter.h	2024-03-12 11:45:56.378495000 +0100
@@ -24,7 +24,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/DataSetWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/DataSetWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/DataSetWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/DataSetWriter.h	2024-03-12 11:45:56.534827100 +0100
@@ -26,7 +26,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/FileHeaderUpdater.h patched/affxparser/src/fusion/calvin_files/writers/src/FileHeaderUpdater.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/FileHeaderUpdater.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/FileHeaderUpdater.h	2024-03-12 11:45:56.757516100 +0100
@@ -32,7 +32,7 @@
 //
 
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/FileHeaderWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/FileHeaderWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/FileHeaderWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/FileHeaderWriter.h	2024-03-12 11:45:56.838206900 +0100
@@ -24,7 +24,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/FileOutput.cpp patched/affxparser/src/fusion/calvin_files/writers/src/FileOutput.cpp
--- orig/affxparser/src/fusion/calvin_files/writers/src/FileOutput.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/FileOutput.cpp	2024-03-12 11:45:56.878457900 +0100
@@ -17,7 +17,7 @@
 //
 ////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include "windows.h"
 #endif
 //
@@ -30,7 +30,7 @@
 #include <string>
 //
 
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <sys/types.h>
 #include <netinet/in.h>
 #include <inttypes.h>
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/GenericDataHeaderUpdater.h patched/affxparser/src/fusion/calvin_files/writers/src/GenericDataHeaderUpdater.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/GenericDataHeaderUpdater.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/GenericDataHeaderUpdater.h	2024-03-12 11:45:57.066207900 +0100
@@ -29,7 +29,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/GenericDataHeaderWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/GenericDataHeaderWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/GenericDataHeaderWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/GenericDataHeaderWriter.h	2024-03-12 11:45:57.140236700 +0100
@@ -26,7 +26,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/GenericFileUpdater.h patched/affxparser/src/fusion/calvin_files/writers/src/GenericFileUpdater.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/GenericFileUpdater.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/GenericFileUpdater.h	2024-03-12 11:45:57.222605400 +0100
@@ -26,7 +26,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/GenericFileWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/GenericFileWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/GenericFileWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/GenericFileWriter.h	2024-03-12 11:45:57.300673300 +0100
@@ -28,7 +28,7 @@
 //
 
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/MMDATFileWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/MMDATFileWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/MMDATFileWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/MMDATFileWriter.h	2024-03-12 11:45:57.534855500 +0100
@@ -33,7 +33,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/MMDataSetDataWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/MMDataSetDataWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/MMDataSetDataWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/MMDataSetDataWriter.h	2024-03-12 11:45:57.472381000 +0100
@@ -31,7 +31,7 @@
 #include <fstream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/MultiChannelCelFileCollater.h patched/affxparser/src/fusion/calvin_files/writers/src/MultiChannelCelFileCollater.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/MultiChannelCelFileCollater.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/MultiChannelCelFileCollater.h	2024-03-12 11:45:57.613031800 +0100
@@ -29,7 +29,7 @@
 #include "calvin_files/parsers/src/GenericFileReader.h"
 #include "calvin_files/writers/src/CombinedDatConstants.h"
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // don't show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/TemplateFileWriter.cpp patched/affxparser/src/fusion/calvin_files/writers/src/TemplateFileWriter.cpp
--- orig/affxparser/src/fusion/calvin_files/writers/src/TemplateFileWriter.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/TemplateFileWriter.cpp	2024-03-12 11:45:57.659870100 +0100
@@ -46,7 +46,7 @@
 using namespace affymetrix_calvin_utilities;
 XERCES_CPP_NAMESPACE_USE
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // ignore deprecated functions warning
 #endif
 
diff -Nru orig/affxparser/src/fusion/calvin_files/writers/src/TextFileWriter.h patched/affxparser/src/fusion/calvin_files/writers/src/TextFileWriter.h
--- orig/affxparser/src/fusion/calvin_files/writers/src/TextFileWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/calvin_files/writers/src/TextFileWriter.h	2024-03-12 11:45:57.786553100 +0100
@@ -32,7 +32,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4290) // dont show warnings about throw keyword on function declarations.
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/1LQFileData.cpp patched/affxparser/src/fusion/file/1LQFileData.cpp
--- orig/affxparser/src/fusion/file/1LQFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/1LQFileData.cpp	2024-03-12 11:45:57.818272800 +0100
@@ -28,7 +28,7 @@
 #include <sys/types.h>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/BARFileData.cpp patched/affxparser/src/fusion/file/BARFileData.cpp
--- orig/affxparser/src/fusion/file/BARFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/BARFileData.cpp	2024-03-12 11:45:57.912569300 +0100
@@ -27,7 +27,7 @@
 #include <sys/types.h>
 //
 
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <sys/mman.h>
 #endif
 
@@ -163,7 +163,7 @@
 	m_bFileOpen(false),
 	m_bFileMapped(false)
 {
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	m_hFileMap = INVALID_HANDLE_VALUE;
 	m_hFile = INVALID_HANDLE_VALUE;
 #else
@@ -435,7 +435,7 @@
 	m_bFileOpen = false;
 	m_bFileMapped = false;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	// Create the file.
 	m_hFile = CreateFile(m_FileName.c_str(), GENERIC_READ, FILE_SHARE_READ,
@@ -539,7 +539,7 @@
 	m_ColumnTypes.erase(m_ColumnTypes.begin(), m_ColumnTypes.end());
 	m_Results.erase(m_Results.begin(), m_Results.end());
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	if (m_bFileOpen)
 	{
 		if (m_bFileMapped)
diff -Nru orig/affxparser/src/fusion/file/BARFileData.h patched/affxparser/src/fusion/file/BARFileData.h
--- orig/affxparser/src/fusion/file/BARFileData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/BARFileData.h	2024-03-12 11:45:57.944277300 +0100
@@ -25,7 +25,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4786) // identifier was truncated in the debug information
 #include <windows.h>
 #endif
@@ -331,7 +331,7 @@
 
 	/*! Pointer to the data in the memory mapped file. */
 	char  *m_lpData;
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	/*! Windows handle to the file. */
 	HANDLE m_hFileMap;
diff -Nru orig/affxparser/src/fusion/file/BARFileWriter.cpp patched/affxparser/src/fusion/file/BARFileWriter.cpp
--- orig/affxparser/src/fusion/file/BARFileWriter.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/BARFileWriter.cpp	2024-03-12 11:45:57.993002300 +0100
@@ -31,7 +31,7 @@
 #include <unistd.h>
 #endif
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define snprintf _snprintf
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
diff -Nru orig/affxparser/src/fusion/file/BARFileWriter.h patched/affxparser/src/fusion/file/BARFileWriter.h
--- orig/affxparser/src/fusion/file/BARFileWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/BARFileWriter.h	2024-03-12 11:45:58.034722300 +0100
@@ -25,7 +25,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4786) // identifier was truncated in the debug information
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/BEDFileData.cpp patched/affxparser/src/fusion/file/BEDFileData.cpp
--- orig/affxparser/src/fusion/file/BEDFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/BEDFileData.cpp	2024-03-12 11:45:58.072529300 +0100
@@ -26,7 +26,7 @@
 #include <string>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define snprintf _snprintf
 #pragma warning(disable: 4996)
 #endif
diff -Nru orig/affxparser/src/fusion/file/BEDFileWriter.cpp patched/affxparser/src/fusion/file/BEDFileWriter.cpp
--- orig/affxparser/src/fusion/file/BEDFileWriter.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/BEDFileWriter.cpp	2024-03-12 11:45:58.160071700 +0100
@@ -25,7 +25,7 @@
 using namespace std;
 using namespace affxbed;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996)
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/BPMAPFileData.cpp patched/affxparser/src/fusion/file/BPMAPFileData.cpp
--- orig/affxparser/src/fusion/file/BPMAPFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/BPMAPFileData.cpp	2024-03-12 11:45:58.234504000 +0100
@@ -29,7 +29,7 @@
 #include <sys/types.h>
 //
 
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <sys/mman.h>
 #endif
 
@@ -78,7 +78,7 @@
 	m_bFileOpen(false),
 	m_bFileMapped(false)
 {
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	m_hFileMap = INVALID_HANDLE_VALUE;
 	m_hFile = INVALID_HANDLE_VALUE;
 #else
@@ -102,7 +102,7 @@
 	m_NumberSequences = 0;
 	m_SequenceItems.erase(m_SequenceItems.begin(), m_SequenceItems.end());
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	if (m_bFileOpen)
 	{
 		if (m_bFileMapped)
@@ -446,7 +446,7 @@
 	m_bFileOpen = false;
 	m_bFileMapped = false;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	// Create the file.
 	m_hFile = CreateFile(m_FileName.c_str(), GENERIC_READ, FILE_SHARE_READ,
diff -Nru orig/affxparser/src/fusion/file/BPMAPFileData.h patched/affxparser/src/fusion/file/BPMAPFileData.h
--- orig/affxparser/src/fusion/file/BPMAPFileData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/BPMAPFileData.h	2024-03-12 11:45:58.284795500 +0100
@@ -25,7 +25,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4786) // identifier was truncated in the debug information
 #include <windows.h>
 #endif
@@ -278,7 +278,7 @@
 
 	/*! Pointer to the data in the memory mapped file. */
 	char  *m_lpData;
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	/*! Windows handle to the file. */
 	HANDLE m_hFileMap;
diff -Nru orig/affxparser/src/fusion/file/BPMAPFileWriter.cpp patched/affxparser/src/fusion/file/BPMAPFileWriter.cpp
--- orig/affxparser/src/fusion/file/BPMAPFileWriter.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/BPMAPFileWriter.cpp	2024-03-12 11:45:58.316007200 +0100
@@ -34,7 +34,7 @@
 #include <vector>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996)
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/CDFFileData.cpp patched/affxparser/src/fusion/file/CDFFileData.cpp
--- orig/affxparser/src/fusion/file/CDFFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/CDFFileData.cpp	2024-03-12 11:45:58.408869000 +0100
@@ -36,11 +36,11 @@
 #include <sys/types.h>
 //
 
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <sys/mman.h>
 #endif
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/CDFFileData.h patched/affxparser/src/fusion/file/CDFFileData.h
--- orig/affxparser/src/fusion/file/CDFFileData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/CDFFileData.h	2024-03-12 11:45:58.440048600 +0100
@@ -26,7 +26,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4786) // identifier was truncated in the debug information
 #include <windows.h>
 #endif
diff -Nru orig/affxparser/src/fusion/file/CELFileData.cpp patched/affxparser/src/fusion/file/CELFileData.cpp
--- orig/affxparser/src/fusion/file/CELFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/CELFileData.cpp	2024-03-12 11:45:58.487401900 +0100
@@ -36,7 +36,7 @@
 #include <sys/types.h>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #ifdef HAVE_SNPRINTF // If not using visual c++'s _snprintf include snprintf.
 extern "C" {
@@ -45,7 +45,7 @@
 #else // otherwise use _snprintf where normally use snprintf.
 #define snprintf _snprintf
 #endif // HAVE_SNPRINTF
-#endif // _MSC_VER
+#endif // FUSION_MSC_VER
 
 using namespace affxcel;
 
@@ -895,7 +895,7 @@
 
 #ifdef CELFILE_USE_MEMMAP
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	// Memory map file on windows...
 	SYSTEM_INFO info;
 	GetSystemInfo(&info);
@@ -957,7 +957,7 @@
 		fclose(m_File);
 		m_File = NULL;
 	}
-#endif // _MSC_VER
+#endif // FUSION_MSC_VER
 
 #else
   // No memory mapping ...
@@ -985,7 +985,7 @@
   gzclose(instr);
 
 #else
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	// Memory map file on windows...
 	SYSTEM_INFO info;
 	GetSystemInfo(&info);
@@ -1269,7 +1269,7 @@
 
 #ifdef CELFILE_USE_MEMMAP
 	// Memory map file
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	SYSTEM_INFO info;
 	GetSystemInfo(&info);
 	m_hFile = CreateFile(m_FileName.c_str(), GENERIC_READ, FILE_SHARE_READ,
@@ -1542,7 +1542,7 @@
 
 	// Memory map file
 #ifdef CELFILE_USE_MEMMAP
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	SYSTEM_INFO info;
 	GetSystemInfo(&info);
 	m_hFile = CreateFile(m_FileName.c_str(), GENERIC_READ, FILE_SHARE_READ,
@@ -2076,7 +2076,7 @@
 	m_pMeanIntensities = NULL;
 
 	// free the map
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	if (m_lpFileMap != NULL)
 	{
 		UnmapViewOfFile(m_lpFileMap);
diff -Nru orig/affxparser/src/fusion/file/CELFileData.h patched/affxparser/src/fusion/file/CELFileData.h
--- orig/affxparser/src/fusion/file/CELFileData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/CELFileData.h	2024-03-12 11:45:58.534860900 +0100
@@ -57,7 +57,7 @@
 #define PAGE_SIZE	(1UL << PAGE_SHIFT)
 ///  Set page mask value for memory mapping used under CYGWIN
 #define PAGE_MASK	(~(PAGE_SIZE-1))
-#elif defined (_MSC_VER)
+#elif defined (FUSION_MSC_VER)
 #include <windows.h>
 ///  Structure alignment requirement for g++
 ///  @remark Structure alignment for Visual C++ is included in #pragma
@@ -84,7 +84,7 @@
 namespace affxcel
 {
 
-#ifdef _MSC_VER 
+#ifdef FUSION_MSC_VER 
 #pragma pack(push, 1)
 #endif
 #ifdef __APPLE__
@@ -120,7 +120,7 @@
 	unsigned char Pixels /* \cond */ /* STRUCT_ALIGNMENT */ /*! \endcond */ ;
 } CELFileTranscriptomeEntryType;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma pack(pop)
 #endif
 #ifdef __APPLE__
@@ -589,10 +589,10 @@
 	/// Flag to determine if outlier data should be read
 	bool m_bReadOutliers;
 
-#ifdef _MSC_VER
-	/// File handle used by CreateFileMapping in _MSC_VER
+#ifdef FUSION_MSC_VER
+	/// File handle used by CreateFileMapping in FUSION_MSC_VER
 	HANDLE m_hFile;
-	/// File map handle used by MapViewOfFile in _MSC_VER
+	/// File map handle used by MapViewOfFile in FUSION_MSC_VER
 	HANDLE m_hFileMap;
 #else
 	/// Pointer to file object
diff -Nru orig/affxparser/src/fusion/file/CELFileWriter.cpp patched/affxparser/src/fusion/file/CELFileWriter.cpp
--- orig/affxparser/src/fusion/file/CELFileWriter.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/CELFileWriter.cpp	2024-03-12 11:45:58.566022700 +0100
@@ -33,7 +33,7 @@
 #include <sys/types.h>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #ifdef HAVE_SNPRINTF // If not using visual c++'s _snprintf include snprintf.
 extern "C" {
@@ -42,7 +42,7 @@
 #else // otherwise use _snprintf where normally use snprintf.
 #define snprintf _snprintf
 #endif // HAVE_SNPRINTF
-#endif // _MSC_VER
+#endif // FUSION_MSC_VER
 
 using namespace affxcel;
 
@@ -98,8 +98,8 @@
 /// Size of compact cel format identifier
 #define CCEL_HEADER_LEN 8
 
-#ifdef _MSC_VER
-/// Line separator for _MSC_VER
+#ifdef FUSION_MSC_VER
+/// Line separator for FUSION_MSC_VER
 #define LINE_SEPARATOR "\n"
 #else
 /// Line separator for unix/linux
diff -Nru orig/affxparser/src/fusion/file/CHPFileData.h patched/affxparser/src/fusion/file/CHPFileData.h
--- orig/affxparser/src/fusion/file/CHPFileData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/CHPFileData.h	2024-03-12 11:45:58.776041900 +0100
@@ -25,7 +25,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4786) // identifier was truncated in the debug information
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/CHPFileWriter.h patched/affxparser/src/fusion/file/CHPFileWriter.h
--- orig/affxparser/src/fusion/file/CHPFileWriter.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/CHPFileWriter.h	2024-03-12 11:45:58.941143400 +0100
@@ -25,7 +25,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4786) // identifier was truncated in the debug information
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/CMSFileData.h patched/affxparser/src/fusion/file/CMSFileData.h
--- orig/affxparser/src/fusion/file/CMSFileData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/CMSFileData.h	2024-03-12 11:45:59.014081000 +0100
@@ -22,7 +22,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4786) // identifier was truncated in the debug information
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/DATFileData.cpp patched/affxparser/src/fusion/file/DATFileData.cpp
--- orig/affxparser/src/fusion/file/DATFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/DATFileData.cpp	2024-03-12 11:45:59.066324300 +0100
@@ -30,7 +30,7 @@
 #include <sys/types.h>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/EXPFileData.cpp patched/affxparser/src/fusion/file/EXPFileData.cpp
--- orig/affxparser/src/fusion/file/EXPFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/EXPFileData.cpp	2024-03-12 11:45:59.512575300 +0100
@@ -31,7 +31,7 @@
 #include <sys/types.h>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/FileIO.cpp patched/affxparser/src/fusion/file/FileIO.cpp
--- orig/affxparser/src/fusion/file/FileIO.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/FileIO.cpp	2024-03-12 11:45:59.765216000 +0100
@@ -19,7 +19,7 @@
 
 //
 //////////////////////////////////////////////////////////////////////
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include "windows.h"
 #endif
 //
@@ -36,7 +36,7 @@
 #include <string.h>
 #include <string>
 //
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #else
 #include <sys/types.h>
diff -Nru orig/affxparser/src/fusion/file/FileWriter.cpp patched/affxparser/src/fusion/file/FileWriter.cpp
--- orig/affxparser/src/fusion/file/FileWriter.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/FileWriter.cpp	2024-03-12 11:46:00.023639500 +0100
@@ -18,7 +18,7 @@
 ////////////////////////////////////////////////////////////////
 
 //////////////////////////////////////////////////////////////////////
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include "windows.h"
 #endif
 //
@@ -31,7 +31,7 @@
 #include <string.h>
 #include <string>
 //
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <inttypes.h>
 #include <netinet/in.h>
 #include <sys/types.h>
diff -Nru orig/affxparser/src/fusion/file/GQCFileData.cpp patched/affxparser/src/fusion/file/GQCFileData.cpp
--- orig/affxparser/src/fusion/file/GQCFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/GQCFileData.cpp	2024-03-12 11:46:00.191657700 +0100
@@ -65,7 +65,7 @@
 #define REPORT_TYPE "affymetrix-generic-report"
 #define REPORT_TITLE "Intensity Report"
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // ignore deprecated functions warning
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/GRDFileData.cpp patched/affxparser/src/fusion/file/GRDFileData.cpp
--- orig/affxparser/src/fusion/file/GRDFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/GRDFileData.cpp	2024-03-12 11:46:00.428420000 +0100
@@ -30,7 +30,7 @@
 #include <sys/types.h>
 //
 
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <sys/mman.h>
 #endif
 
@@ -229,7 +229,7 @@
 	m_bFileOpen(false),
 	m_bFileMapped(false)
 {
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	m_hFileMap = INVALID_HANDLE_VALUE;
 	m_hFile = INVALID_HANDLE_VALUE;
 #else
@@ -268,7 +268,7 @@
 	m_bFileOpen = false;
 	m_bFileMapped = false;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	// Create the file.
 	m_hFile = CreateFileA(m_FileName.c_str(), GENERIC_READ, FILE_SHARE_READ,
@@ -378,7 +378,7 @@
 void CGRDFileData::Close()
 {
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 	if (m_bFileOpen)
 	{
 		if (m_bFileMapped)
diff -Nru orig/affxparser/src/fusion/file/GRDFileData.h patched/affxparser/src/fusion/file/GRDFileData.h
--- orig/affxparser/src/fusion/file/GRDFileData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/GRDFileData.h	2024-03-12 11:46:00.476307200 +0100
@@ -22,7 +22,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #include <windows.h>
 #endif
 
@@ -305,7 +305,7 @@
 	/*! A pointer to the memory mapped file. */
 	char  *m_lpData;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 	/*! A file handle. */
 	HANDLE m_hFileMap;
diff -Nru orig/affxparser/src/fusion/file/GRDFileWriter.cpp patched/affxparser/src/fusion/file/GRDFileWriter.cpp
--- orig/affxparser/src/fusion/file/GRDFileWriter.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/GRDFileWriter.cpp	2024-03-12 11:46:00.524450900 +0100
@@ -35,7 +35,7 @@
 
 using namespace affxgrd;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/IniFile.h patched/affxparser/src/fusion/file/IniFile.h
--- orig/affxparser/src/fusion/file/IniFile.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/IniFile.h	2024-03-12 11:46:00.718236500 +0100
@@ -25,7 +25,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4786) // identifier was truncated in the debug information
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/MDLFileData.cpp patched/affxparser/src/fusion/file/MDLFileData.cpp
--- orig/affxparser/src/fusion/file/MDLFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/MDLFileData.cpp	2024-03-12 11:46:00.797743000 +0100
@@ -34,7 +34,7 @@
 #include <sys/types.h>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
@@ -155,7 +155,7 @@
 			m_ProbeData[i] = probeData;
 	}
   
-#if defined(_USE_MEM_MAPPING_) && defined(_MSC_VER)
+#if defined(_USE_MEM_MAPPING_) && defined(FUSION_MSC_VER)
 	m_bFileOpen = false;
 	m_lpFileMap = NULL;
 	m_hFileMap = INVALID_HANDLE_VALUE;
@@ -249,7 +249,7 @@
 	if (index < 0 || index >= m_Header.GetNumProbes())
 		assert(index >= 0 && index < m_Header.GetNumProbes());
 
-#if defined(_USE_MEM_MAPPING_) && defined(_MSC_VER)
+#if defined(_USE_MEM_MAPPING_) && defined(FUSION_MSC_VER)
 	if (m_bFileMapped == false)
 		data.MakeShallowCopy(m_ProbeData[index]);
 	else
@@ -327,7 +327,7 @@
 	// First close the file.
 	Close();
 
-#if defined(_USE_MEM_MAPPING_) && defined(_MSC_VER)
+#if defined(_USE_MEM_MAPPING_) && defined(FUSION_MSC_VER)
 	return ReadFileUsingMemMap(bReadHeaderOnly);
 #else
 	return ReadFile(bReadHeaderOnly);
@@ -340,7 +340,7 @@
 {
 	m_ProbeData.clear();
 
-#if defined(_USE_MEM_MAPPING_) && defined(_MSC_VER)
+#if defined(_USE_MEM_MAPPING_) && defined(FUSION_MSC_VER)
 	if (m_bFileOpen)
 	{
 		if (m_bFileMapped)
@@ -426,7 +426,7 @@
 
 /////////////////////////////////////////////////////////////////
 
-#if defined(_USE_MEM_MAPPING_) && defined(_MSC_VER)
+#if defined(_USE_MEM_MAPPING_) && defined(FUSION_MSC_VER)
 bool CMDLFileData::ReadFileUsingMemMap(bool bReadHeaderOnly)
 {
 	try
diff -Nru orig/affxparser/src/fusion/file/MDLFileData.h patched/affxparser/src/fusion/file/MDLFileData.h
--- orig/affxparser/src/fusion/file/MDLFileData.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/MDLFileData.h	2024-03-12 11:46:00.845151700 +0100
@@ -25,7 +25,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4786) // identifier was truncated in the debug information
 #include <windows.h>
 #endif
@@ -59,7 +59,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 /*! Use one byte alignment for memory mapping functionality */
 #pragma pack(push, 1)
 #endif
@@ -76,7 +76,7 @@
 	char	sReserve[RESERVED_SIZE]; /*! Reserved for future use */
 } MDLHeader;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 /*! End of one byte alignment */
 #pragma pack(pop)
 #endif
@@ -170,7 +170,7 @@
 
 //////////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 /*! Use one byte alignment for memory mapping functionality */
 #pragma pack(push, 1)
 #endif
@@ -184,7 +184,7 @@
 	float	Offset;					/*! Reserved for future use */
 } MDLData;
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 /*! End of one byte alignment */
 #pragma pack(pop)
 #endif
@@ -323,7 +323,7 @@
 	 */
 	bool ReadFileHeader(std::ifstream &instr);
 
-#if defined(_USE_MEM_MAPPING_) && defined(_MSC_VER)
+#if defined(_USE_MEM_MAPPING_) && defined(FUSION_MSC_VER)
 	bool ReadFileUsingMemMap(bool bReadHeaderOnly);
 	void  *m_lpFileMap;
 	char  *m_lpData;
diff -Nru orig/affxparser/src/fusion/file/MSKFileData.cpp patched/affxparser/src/fusion/file/MSKFileData.cpp
--- orig/affxparser/src/fusion/file/MSKFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/MSKFileData.cpp	2024-03-12 11:46:00.878885900 +0100
@@ -29,7 +29,7 @@
 #include <sys/types.h>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/MSKFileWriter.cpp patched/affxparser/src/fusion/file/MSKFileWriter.cpp
--- orig/affxparser/src/fusion/file/MSKFileWriter.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/MSKFileWriter.cpp	2024-03-12 11:46:00.956563100 +0100
@@ -23,7 +23,7 @@
 #include <istream>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/PSIFileData.cpp patched/affxparser/src/fusion/file/PSIFileData.cpp
--- orig/affxparser/src/fusion/file/PSIFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/PSIFileData.cpp	2024-03-12 11:46:01.034685500 +0100
@@ -29,7 +29,7 @@
 #include <sys/types.h>
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996) // don't show deprecated warnings.
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/SMDFileData.cpp patched/affxparser/src/fusion/file/SMDFileData.cpp
--- orig/affxparser/src/fusion/file/SMDFileData.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/SMDFileData.cpp	2024-03-12 11:46:01.253536100 +0100
@@ -17,7 +17,7 @@
 //
 ////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define _CRT_SECURE_NO_WARNINGS
 #endif
 
@@ -26,7 +26,7 @@
 //
 #include <sys/stat.h>
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define snprintf _snprintf
 #endif
 
diff -Nru orig/affxparser/src/fusion/file/TsvFile/TsvFile.h patched/affxparser/src/fusion/file/TsvFile/TsvFile.h
--- orig/affxparser/src/fusion/file/TsvFile/TsvFile.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/TsvFile/TsvFile.h	2024-03-12 11:46:02.212336500 +0100
@@ -523,7 +523,7 @@
 
 #ifndef SWIG
   TsvFile& operator=(const TsvFile& that) {
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
     (that); /* unused var */
 #endif
     Err::errAbort("TsvFile: Assigment of TsvFile not allowed.");
diff -Nru orig/affxparser/src/fusion/file/TsvFile/tsv-example.cpp patched/affxparser/src/fusion/file/TsvFile/tsv-example.cpp
--- orig/affxparser/src/fusion/file/TsvFile/tsv-example.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/file/TsvFile/tsv-example.cpp	2024-03-12 11:46:02.038802000 +0100
@@ -38,7 +38,7 @@
 
 //
 //
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define snprintf _snprintf
 #endif
 
diff -Nru orig/affxparser/src/fusion/portability/affy-base-types.h patched/affxparser/src/fusion/portability/affy-base-types.h
--- orig/affxparser/src/fusion/portability/affy-base-types.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/portability/affy-base-types.h	2024-03-12 11:46:02.410216400 +0100
@@ -52,7 +52,7 @@
 
 /*! Microsoft Visual Studio C++ doesn't implement std::min() and std::max()
   due to possible conflict with min() and max() defined in windows.h. */
-#ifdef _MSC_VER   // vc++ version
+#ifdef FUSION_MSC_VER   // vc++ version
 #include <windows.h>
 #define Max(a,b) max(a,b)
 #define Min(a,b) min(a,b)
@@ -60,7 +60,7 @@
 #include <algorithm>
 #define Max(a,b) std::max(a,b)
 #define Min(a,b) std::min(a,b)
-#endif           // _MSC_VER
+#endif           // FUSION_MSC_VER
 
 #ifdef WIN64
 #include <stdint.h>
diff -Nru orig/affxparser/src/fusion/portability/affy-system-api.h patched/affxparser/src/fusion/portability/affy-system-api.h
--- orig/affxparser/src/fusion/portability/affy-system-api.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/portability/affy-system-api.h	2024-03-12 11:46:02.456570600 +0100
@@ -44,7 +44,7 @@
 /*! @file affy-system-api.h This file defines operating system API functions for consistency across platforms.
  */
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 
 //#pragma warning(disable: 4996) // ignore deprecated functions warning
 #include <process.h>
@@ -56,6 +56,6 @@
 
 #include <unistd.h>
 
-#endif /* _MSC_VER */
+#endif /* FUSION_MSC_VER */
 
 #endif /* affy-system-api.h */
diff -Nru orig/affxparser/src/fusion/portability/apt-no-warnings.h patched/affxparser/src/fusion/portability/apt-no-warnings.h
--- orig/affxparser/src/fusion/portability/apt-no-warnings.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/portability/apt-no-warnings.h	2024-03-12 11:46:02.503455000 +0100
@@ -33,7 +33,7 @@
 #ifndef _APT_NO_WARNINGS_H_
 #define _APT_NO_WARNINGS_H_
 
-#if defined(_MSC_VER)
+#if defined(FUSION_MSC_VER)
 
 // to turn these warnings back on, use
 // #pragma warning( LVL : NUMBER )
diff -Nru orig/affxparser/src/fusion/util/AffxSplitArray.h patched/affxparser/src/fusion/util/AffxSplitArray.h
--- orig/affxparser/src/fusion/util/AffxSplitArray.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/AffxSplitArray.h	2024-03-12 11:46:02.916304800 +0100
@@ -85,7 +85,7 @@
 	 */
 	void allocate(int n)
 	{
-//#ifndef _MSC_VER
+//#ifndef FUSION_MSC_VER
 //		allocate(n, 1);
 //#else
 //		allocate(n, 4);
diff -Nru orig/affxparser/src/fusion/util/AffxTime.cpp patched/affxparser/src/fusion/util/AffxTime.cpp
--- orig/affxparser/src/fusion/util/AffxTime.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/AffxTime.cpp	2024-03-12 11:46:03.173724600 +0100
@@ -26,7 +26,7 @@
 #include <stdio.h>
 #include <string>
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 // dont warn about some funcs...
 #define _CRT_SECURE_NO_WARNINGS
 #endif
diff -Nru orig/affxparser/src/fusion/util/BaseEngine.cpp patched/affxparser/src/fusion/util/BaseEngine.cpp
--- orig/affxparser/src/fusion/util/BaseEngine.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/BaseEngine.cpp	2024-03-12 11:46:03.628462600 +0100
@@ -122,7 +122,7 @@
       string port = url.substr(url.find(':') + 1);
       int verbosity = getOptInt("verbose");
       m_SocketHandler = new MsgSocketHandler(verbosity);
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
       m_SocketHandler->setEndOfLine("\n");
 #endif
       m_SocketHandler->openSocket(host, port);
diff -Nru orig/affxparser/src/fusion/util/Fs.cpp patched/affxparser/src/fusion/util/Fs.cpp
--- orig/affxparser/src/fusion/util/Fs.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/Fs.cpp	2024-03-12 11:46:04.416735200 +0100
@@ -20,7 +20,7 @@
 // affy/sdk/util/Fs.cpp ---
 //
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define _CRT_SECURE_NO_WARNINGS
 #endif
 
diff -Nru orig/affxparser/src/fusion/util/Fs.h patched/affxparser/src/fusion/util/Fs.h
--- orig/affxparser/src/fusion/util/Fs.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/Fs.h	2024-03-12 11:46:04.448420000 +0100
@@ -397,7 +397,7 @@
                            AptErr_t& rv,
                            bool abortOnErr=true);
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
   static std::string MSC_VER_GetLastErrorString( const std::string&  whence = "" );
 #endif
 
diff -Nru orig/affxparser/src/fusion/util/FsPath.cpp patched/affxparser/src/fusion/util/FsPath.cpp
--- orig/affxparser/src/fusion/util/FsPath.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/FsPath.cpp	2024-03-12 11:46:04.497423700 +0100
@@ -107,7 +107,7 @@
 
 //////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning(disable: 4996)
 #endif
 
@@ -487,7 +487,7 @@
 
 std::string FsPath::asUncPath() const {
   std::string tmp=asUnixPath();
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
   Fs::convertToUncPathInPlace(tmp);
 #endif
   return tmp;
diff -Nru orig/affxparser/src/fusion/util/Guid.cpp patched/affxparser/src/fusion/util/Guid.cpp
--- orig/affxparser/src/fusion/util/Guid.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/Guid.cpp	2024-03-12 11:46:04.577854800 +0100
@@ -17,7 +17,7 @@
 //
 ////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define _CRT_SECURE_NO_WARNINGS
 #endif
 
@@ -46,7 +46,7 @@
 
 //////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define _CRT_SECURE_NO_WARNINGS
 #endif
 
diff -Nru orig/affxparser/src/fusion/util/SocketEngine.cpp patched/affxparser/src/fusion/util/SocketEngine.cpp
--- orig/affxparser/src/fusion/util/SocketEngine.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/SocketEngine.cpp	2024-03-12 11:46:05.861546400 +0100
@@ -17,7 +17,7 @@
 //
 ////////////////////////////////////////////////////////////////
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define _CRT_SECURE_NO_WARNINGS
 #endif
 
diff -Nru orig/affxparser/src/fusion/util/TmpFileFactory.cpp patched/affxparser/src/fusion/util/TmpFileFactory.cpp
--- orig/affxparser/src/fusion/util/TmpFileFactory.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/TmpFileFactory.cpp	2024-03-12 11:46:06.526556400 +0100
@@ -20,7 +20,7 @@
 /// @file TmpFileFactory.h
 /// @brief for usage examples, look at "util/test-tmpfilefactory.cpp"
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #define _CRT_SECURE_NO_WARNINGS
 #endif
 
diff -Nru orig/affxparser/src/fusion/util/Verbose.cpp patched/affxparser/src/fusion/util/Verbose.cpp
--- orig/affxparser/src/fusion/util/Verbose.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/Verbose.cpp	2024-03-12 11:46:06.722597300 +0100
@@ -59,7 +59,7 @@
 //   StringUtils::ConvertMBSToWCS() call. Hopefully ok.  If not,
 //   this "emergency debugging output" function shouldn't be called
 //   anyways. /HB 2012-08-29
-#ifdef _MSC_VER_HIDE //HB
+#ifdef FUSION_MSC_VER_HIDE //HB
 		std::wstring wfname=StringUtils::ConvertMBSToWCS(fname);
 		em_out_fstream->open(wfname.c_str(),ios::out);
 #else
diff -Nru orig/affxparser/src/fusion/util/apt-engine-wrapper.vcproj patched/affxparser/src/fusion/util/apt-engine-wrapper.vcproj
--- orig/affxparser/src/fusion/util/apt-engine-wrapper.vcproj	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/apt-engine-wrapper.vcproj	2024-03-12 11:46:03.519104900 +0100
@@ -1,372 +1,372 @@
-<?xml version="1.0" encoding="Windows-1252"?>
-<VisualStudioProject
-	ProjectType="Visual C++"
-	Version="9.00"
-	Name="apt-engine-wrapper"
-	ProjectGUID="{9D583200-6F07-11DD-AD8B-0800200C9A66}"
-	RootNamespace="apt-engine-wrapper"
-	Keyword="Win32Proj"
-	TargetFrameworkVersion="131072"
-	>
-	<Platforms>
-		<Platform
-			Name="Win32"
-		/>
-		<Platform
-			Name="x64"
-		/>
-	</Platforms>
-	<ToolFiles>
-	</ToolFiles>
-	<Configurations>
-		<Configuration
-			Name="Debug|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="1"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..;..\..\..\external\hdf5\windows\src\;..\..\..\external\hdf5\src\CVS;..\..\..\robertnz\newmat"
-				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE"
-				MinimalRebuild="true"
-				BasicRuntimeChecks="0"
-				RuntimeLibrary="3"
-				RuntimeTypeInfo="true"
-				UsePrecompiledHeader="0"
-				WarningLevel="0"
-				DebugInformationFormat="3"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLinkerTool"
-				AdditionalDependencies="Ws2_32.lib"
-				OutputFile="$(OutDir)\$(ProjectName).exe"
-				LinkIncremental="2"
-				GenerateDebugInformation="true"
-				AssemblyDebug="1"
-				RandomizedBaseAddress="1"
-				DataExecutionPrevention="0"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCAppVerifierTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Debug|x64"
-			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
-			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
-			ConfigurationType="1"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-				TargetEnvironment="3"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="0"
-				AdditionalIncludeDirectories="..;..\..\..\external\hdf5\windows\src\;..\..\..\external\hdf5\src\CVS;..\..\..\robertnz\newmat"
-				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE"
-				MinimalRebuild="true"
-				BasicRuntimeChecks="0"
-				RuntimeLibrary="3"
-				RuntimeTypeInfo="true"
-				UsePrecompiledHeader="0"
-				WarningLevel="0"
-				DebugInformationFormat="3"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLinkerTool"
-				AdditionalDependencies="Ws2_32.lib"
-				OutputFile="$(OutDir)\$(ProjectName).exe"
-				LinkIncremental="2"
-				GenerateDebugInformation="true"
-				AssemblyDebug="1"
-				RandomizedBaseAddress="1"
-				DataExecutionPrevention="0"
-				TargetMachine="17"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCAppVerifierTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Release|Win32"
-			OutputDirectory="$(ConfigurationName)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="1"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				FavorSizeOrSpeed="1"
-				WholeProgramOptimization="true"
-				AdditionalIncludeDirectories="..;..\..\..\external\hdf5\windows\src\;..\..\..\external\hdf5\src\CVS;..\..\..\robertnz\newmat"
-				PreprocessorDefinitions="WIN32;_CONSOLE"
-				MinimalRebuild="true"
-				RuntimeLibrary="2"
-				RuntimeTypeInfo="true"
-				UsePrecompiledHeader="0"
-				WarningLevel="0"
-				DebugInformationFormat="3"
-				OmitDefaultLibName="false"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLinkerTool"
-				AdditionalDependencies="Ws2_32.lib"
-				OutputFile="$(OutDir)\$(ProjectName).exe"
-				LinkIncremental="1"
-				IgnoreAllDefaultLibraries="false"
-				GenerateDebugInformation="false"
-				LinkTimeCodeGeneration="1"
-				RandomizedBaseAddress="1"
-				DataExecutionPrevention="0"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCAppVerifierTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-		<Configuration
-			Name="Release|x64"
-			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
-			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
-			ConfigurationType="1"
-			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-			CharacterSet="2"
-			>
-			<Tool
-				Name="VCPreBuildEventTool"
-			/>
-			<Tool
-				Name="VCCustomBuildTool"
-			/>
-			<Tool
-				Name="VCXMLDataGeneratorTool"
-			/>
-			<Tool
-				Name="VCWebServiceProxyGeneratorTool"
-			/>
-			<Tool
-				Name="VCMIDLTool"
-				TargetEnvironment="3"
-			/>
-			<Tool
-				Name="VCCLCompilerTool"
-				Optimization="2"
-				InlineFunctionExpansion="2"
-				EnableIntrinsicFunctions="true"
-				FavorSizeOrSpeed="1"
-				WholeProgramOptimization="true"
-				AdditionalIncludeDirectories="..;..\..\..\external\hdf5\windows\src\;..\..\..\external\hdf5\src\CVS;..\..\..\robertnz\newmat"
-				PreprocessorDefinitions="WIN32;_CONSOLE"
-				MinimalRebuild="true"
-				RuntimeLibrary="2"
-				RuntimeTypeInfo="true"
-				UsePrecompiledHeader="0"
-				WarningLevel="0"
-				DebugInformationFormat="3"
-				OmitDefaultLibName="false"
-			/>
-			<Tool
-				Name="VCManagedResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCResourceCompilerTool"
-			/>
-			<Tool
-				Name="VCPreLinkEventTool"
-			/>
-			<Tool
-				Name="VCLinkerTool"
-				AdditionalOptions="/LTCG"
-				AdditionalDependencies="Ws2_32.lib"
-				OutputFile="$(OutDir)\$(ProjectName).exe"
-				LinkIncremental="1"
-				IgnoreAllDefaultLibraries="false"
-				GenerateDebugInformation="true"
-				LinkTimeCodeGeneration="1"
-				RandomizedBaseAddress="1"
-				DataExecutionPrevention="0"
-				TargetMachine="17"
-			/>
-			<Tool
-				Name="VCALinkTool"
-			/>
-			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
-				Name="VCXDCMakeTool"
-			/>
-			<Tool
-				Name="VCBscMakeTool"
-			/>
-			<Tool
-				Name="VCFxCopTool"
-			/>
-			<Tool
-				Name="VCAppVerifierTool"
-			/>
-			<Tool
-				Name="VCPostBuildEventTool"
-			/>
-		</Configuration>
-	</Configurations>
-	<References>
-	</References>
-	<Files>
-		<Filter
-			Name="Source Files"
-			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
-			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
-			>
-			<File
-				RelativePath="apt-engine-wrapper.cpp"
-				>
-			</File>
-		</Filter>
-		<Filter
-			Name="Header Files"
-			Filter="h;hpp;hxx;hm;inl;inc;xsd"
-			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
-			>
-		</Filter>
-		<Filter
-			Name="Resource Files"
-			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
-			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
-			>
-		</Filter>
-	</Files>
-	<Globals>
-	</Globals>
-</VisualStudioProject>
+<?xml version="1.0" encoding="Windows-1252"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="9.00"
+	Name="apt-engine-wrapper"
+	ProjectGUID="{9D583200-6F07-11DD-AD8B-0800200C9A66}"
+	RootNamespace="apt-engine-wrapper"
+	Keyword="Win32Proj"
+	TargetFrameworkVersion="131072"
+	>
+	<Platforms>
+		<Platform
+			Name="Win32"
+		/>
+		<Platform
+			Name="x64"
+		/>
+	</Platforms>
+	<ToolFiles>
+	</ToolFiles>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="$(ConfigurationName)"
+			IntermediateDirectory="$(ConfigurationName)"
+			ConfigurationType="1"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories="..;..\..\..\external\hdf5\windows\src\;..\..\..\external\hdf5\src\CVS;..\..\..\robertnz\newmat"
+				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE"
+				MinimalRebuild="true"
+				BasicRuntimeChecks="0"
+				RuntimeLibrary="3"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="0"
+				WarningLevel="0"
+				DebugInformationFormat="3"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="Ws2_32.lib"
+				OutputFile="$(OutDir)\$(ProjectName).exe"
+				LinkIncremental="2"
+				GenerateDebugInformation="true"
+				AssemblyDebug="1"
+				RandomizedBaseAddress="1"
+				DataExecutionPrevention="0"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="Debug|x64"
+			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
+			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
+			ConfigurationType="1"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+				TargetEnvironment="3"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories="..;..\..\..\external\hdf5\windows\src\;..\..\..\external\hdf5\src\CVS;..\..\..\robertnz\newmat"
+				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE"
+				MinimalRebuild="true"
+				BasicRuntimeChecks="0"
+				RuntimeLibrary="3"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="0"
+				WarningLevel="0"
+				DebugInformationFormat="3"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="Ws2_32.lib"
+				OutputFile="$(OutDir)\$(ProjectName).exe"
+				LinkIncremental="2"
+				GenerateDebugInformation="true"
+				AssemblyDebug="1"
+				RandomizedBaseAddress="1"
+				DataExecutionPrevention="0"
+				TargetMachine="17"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="$(ConfigurationName)"
+			IntermediateDirectory="$(ConfigurationName)"
+			ConfigurationType="1"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="2"
+				FavorSizeOrSpeed="1"
+				WholeProgramOptimization="true"
+				AdditionalIncludeDirectories="..;..\..\..\external\hdf5\windows\src\;..\..\..\external\hdf5\src\CVS;..\..\..\robertnz\newmat"
+				PreprocessorDefinitions="WIN32;_CONSOLE"
+				MinimalRebuild="true"
+				RuntimeLibrary="2"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="0"
+				WarningLevel="0"
+				DebugInformationFormat="3"
+				OmitDefaultLibName="false"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="Ws2_32.lib"
+				OutputFile="$(OutDir)\$(ProjectName).exe"
+				LinkIncremental="1"
+				IgnoreAllDefaultLibraries="false"
+				GenerateDebugInformation="false"
+				LinkTimeCodeGeneration="1"
+				RandomizedBaseAddress="1"
+				DataExecutionPrevention="0"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="Release|x64"
+			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
+			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
+			ConfigurationType="1"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+				TargetEnvironment="3"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="2"
+				InlineFunctionExpansion="2"
+				EnableIntrinsicFunctions="true"
+				FavorSizeOrSpeed="1"
+				WholeProgramOptimization="true"
+				AdditionalIncludeDirectories="..;..\..\..\external\hdf5\windows\src\;..\..\..\external\hdf5\src\CVS;..\..\..\robertnz\newmat"
+				PreprocessorDefinitions="WIN32;_CONSOLE"
+				MinimalRebuild="true"
+				RuntimeLibrary="2"
+				RuntimeTypeInfo="true"
+				UsePrecompiledHeader="0"
+				WarningLevel="0"
+				DebugInformationFormat="3"
+				OmitDefaultLibName="false"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalOptions="/LTCG"
+				AdditionalDependencies="Ws2_32.lib"
+				OutputFile="$(OutDir)\$(ProjectName).exe"
+				LinkIncremental="1"
+				IgnoreAllDefaultLibraries="false"
+				GenerateDebugInformation="true"
+				LinkTimeCodeGeneration="1"
+				RandomizedBaseAddress="1"
+				DataExecutionPrevention="0"
+				TargetMachine="17"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="Source Files"
+			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
+			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
+			>
+			<File
+				RelativePath="apt-engine-wrapper.cpp"
+				>
+			</File>
+		</Filter>
+		<Filter
+			Name="Header Files"
+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
+			>
+		</Filter>
+		<Filter
+			Name="Resource Files"
+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
+			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
+			>
+		</Filter>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>
diff -Nru orig/affxparser/src/fusion/util/md5.cpp patched/affxparser/src/fusion/util/md5.cpp
--- orig/affxparser/src/fusion/util/md5.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/md5.cpp	2024-03-12 11:46:04.847240900 +0100
@@ -32,7 +32,7 @@
 #include <cstring>
 #include <string>
 
-#ifdef _MSC_VER
+#ifdef FUSION_MSC_VER
 #pragma warning( disable: 4244 )
 #endif
 
diff -Nru orig/affxparser/src/fusion/util/md5sum.cpp patched/affxparser/src/fusion/util/md5sum.cpp
--- orig/affxparser/src/fusion/util/md5sum.cpp	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/md5sum.cpp	2024-03-12 11:46:04.941469800 +0100
@@ -33,7 +33,7 @@
 #ifdef _WIN32
 #include <winsock2.h> 
 #endif
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <netinet/in.h>
 #include <stdint.h>
 #endif
diff -Nru orig/affxparser/src/fusion/util/md5sum.h patched/affxparser/src/fusion/util/md5sum.h
--- orig/affxparser/src/fusion/util/md5sum.h	2023-10-20 20:13:00.000000000 +0200
+++ patched/affxparser/src/fusion/util/md5sum.h	2024-03-12 11:46:04.973246400 +0100
@@ -21,7 +21,7 @@
 /// @brief  C++ utility functions to make computing MD5s simple
 
 //
-#ifndef _MSC_VER
+#ifndef FUSION_MSC_VER
 #include <stdint.h>
 #endif
 
